{"version":3,"sources":["Home/Home.js","SignupSuccess/SignupSuccess.js","UserView/UserAppBar.js","UserView/LoadingSpinner.js","UserView/NewTrackerDialog.js","UserView/applicationProgress.js","UserView/Ticket.js","UserView/TicketDialog/TicketDetails.js","UserView/TicketDialog/EditTicket.js","UserView/TicketDialog/TicketDialog.js","UserView/UserView.js","UserSettings/UserStyle.js","UserSettings/ChangePassword.js","UserSettings/UserSettings.js","App.js","serviceWorker.js","MyColorTheme.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpen","setState","dialogueOpen","handleClose","handleChange","prop","event","defineProperty","target","value","handleLogin","preventDefault","axios","post","username","state","name","password","then","response","localStorage","setItem","data","token","history","push","catch","error","console","log","loginMessage","handleRegistration","newUsername","length","newPassword","checkUniqueUsername","isUnique","redirectToSignupSuccess","registrationMessage","returnedUser","undefined","bind","assertThisInitialized","_this2","get","concat","getItem","decoded","jwt_decode","Math","floor","Date","now","exp","removeItem","react_default","a","createElement","className","Card_default","style","maxWidth","margin","padding","onSubmit","Grid_default","container","spacing","direction","justify","item","xs","sm","FormControl_default","InputLabel_default","htmlFor","Input_default","autoComplete","onChange","type","Button_default","color","label","variant","onClick","Dialog_default","open","onClose","required","id","Component","SignupSuccess","redirect","setTimeout","clearTimeout","Redirect","to","UserAppBar","sortMenuOpen","anchorEl","currentTarget","userMenuOpen","userMenuEl","sortMenu","userMenu","sortMenuClose","userMenuClose","newSortOrder","sortOrder","changeSortOrder","_this$state","styles","hamburgerButton","fontSize","grow","flexGrow","grow2","displayOption","marginLeft","marginRight","AppBar_default","position","Toolbar_default","aria-owns","aria-haspopup","icons_Menu_default","Menu_default","Boolean","MenuItem_default","currentUsername","Link","handleLogout","FormControlLabel_default","control","Switch_default","checked","showArchived","handleSwitch","labelPlacement","spinnerStyle","spinnerContainer","height","display","justifyContent","alignItems","LoadingSpinner","CircularProgress_default","size","library","add","faHandshake","NewTrackerDialog","acceptedOffer","postTicket","openArchiveAlert","method","url","userId","companyName","resumeLink","includesCoverLetter","applicationNotes","calledForInterview","jobOffered","archived","retrieveTickets","postArchivedTicket","decision","pleaseArchive","loading","DialogTitle_default","align","TextField_default","placeholder","multiline","DialogContent_default","DialogActions_default","cancel","react_fontawesome_index_es","icon","DialogContentText_default","faDoorOpen","faPhone","faDoorClosed","brandGreen","applicationProgress","ticket","accepted_offer","job_offered","called_for_interview","faCopy","faTimes","Ticket","hover","cursor","CardHeader_default","title","company","subheader","CardContent_default","TicketDetails","handleWarningDisplay","showDeleteWarning","deleteTicket","delete","ticket_id","headers","Authorization","handleTicketClose","buttonIcon","dangerRed","backgroundColor","resume_link","href","includes_cover_letter","application_notes","toggleEditDisplay","Build_default","Delete_default","aria-labelledby","aria-describedby","EditTicket","updateTicket","_ref","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","ticketId","_ref2","_callee","_context","stop","_x2","apply","arguments","_x","TicketDialog","showEditForm","TicketDialog_EditTicket","getUpdatedTicketDetails","TicketDialog_TicketDetails","UserView","apiEndpoint","tickets","ticketOrder","sort","b","creation_date","userTickets","ticketDetails","activeTicket","openTicket","handleClickOpen","handleTicketOpen","index","storedToken","UserView_UserAppBar","Fade_default","in","map","key","toString","md","UserView_Ticket","Fab_default","bottom","right","Add_default","UserView_NewTrackerDialog","UserView_TicketDialog_TicketDialog","close","UserStyle","ChangePassword","updatePassword","oldPassword","didUpdatePW","incorrectPW","fading","UserSettings","handleTab","settingsCard","tab","background","Tabs_default","indicatorColor","textColor","Tab_default","UserSettings_UserStyle","UserSettings_ChangePassword","faArrowLeft","App","BrowserRouter","Route","exact","path","render","src_Home_Home","component","src_UserView_UserView","assign","src_UserSettings_UserSettings","window","location","hostname","match","muiTheme","createMuiTheme","palette","primary","main","contrastText","secondary","paper","default","ReactDOM","core_styles","theme","myColorTheme","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bf01d80.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport { BrowserRouter as  Redirect } from \"react-router-dom\";\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props) \n        this.state = {\n            dialogueOpen: false,\n            loginMessage: '',\n            name: '',\n            password: '',\n            newUsername: '',\n            newPassword: '',\n            returnedUser: undefined,\n            registrationMessage: '',\n            redirectToSignupSuccess: false\n        }\n        this.checkUniqueUsername = this.checkUniqueUsername.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleLogin = this.handleLogin.bind(this)\n        this.handleOpen = this.handleOpen.bind(this)\n        this.handleRegistration = this.handleRegistration.bind(this)   \n    }\n\n    handleOpen = () => {\n        this.setState({ dialogueOpen: true });\n    };\n    \n    handleClose = () => {\n        this.setState({ dialogueOpen: false });\n    };\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n    };\n\n    checkUniqueUsername(username) {\n        return axios.get(`/api/checkuniquename/${username}`)\n        .then((response) => {\n            if (response.data === false) {\n                this.setState({registrationMessage: \"Sorry, but that username is taken\"})\n                return false\n            }\n            else {\n                return true\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    handleLogin = event => {\n        event.preventDefault();\n\n        //Make a network call somewhere\n        axios.post(`/api/login`, {\n            username: this.state.name,\n            password: this.state.password\n        })\n        \n        //?username=\"${this.state.name}\"&password=\"${this.state.password}\"`)\n        .then((response) => {\n\n            localStorage.setItem('jwtToken', response.data.token)\n            this.props.history.push('/inner')\n            \n        })\n        .catch( (error) => {\n            console.log(error);\n            this.setState({loginMessage: \"Sorry. Your username or password is incorrect.\"})\n        })\n    }\n\n    handleRegistration = event => {\n        event.preventDefault();\n\n        //check that username and passwords aren't empty strings\n        if (this.state.newUsername.length > 0 && this.state.newPassword.length > 0) {\n            \n            //check that the new username isn't already in the database\n            this.checkUniqueUsername(this.state.newUsername)\n            .then(isUnique => {\n                if (isUnique === true) {\n                    axios.post('/api/createuser', {\n                        username: this.state.newUsername,\n                        password: this.state.newPassword\n                    })\n                    .then( response => {                          \n                        this.setState({redirectToSignupSuccess: true}, () => {\n                            this.props.history.push('/signupsuccess') \n                        })                           \n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n                }\n            })\n        }\n        else {\n            this.setState({registrationMessage: \"Sorry, but we need a username and password for you to sign up\"})\n        }\n    }\n\n    render() {\n\n        const style={\n            loginCard: {\n                maxWidth: '442px',\n                margin: '0 auto',\n                padding: '1em'\n            },            \n        }\n        \n        if (localStorage.getItem(\"jwtToken\")) {\n            \n            //decode the jwt's payload.\n            let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n\n            //get the current time\n            let currentTime = Math.floor(Date.now() / 1000)\n\n            //if the current time on rendering is earlier than the expiration date, show the page.\n            if (currentTime < decoded.exp) {\n                console.log('we are still logged in')\n                this.props.history.push('/inner')\n            }\n            else {\n                localStorage.removeItem('jwtToken')\n            }            \n        }\n\n        return (\n            <div>\n                <div >\n                    <h1 className=\"home-logo\">APPLi</h1> \n                </div>\n                <Card style={style.loginCard}>\n                    <div className=\"login-message\">\n                        <h4>{this.state.loginMessage}</h4>\n                    </div>\n                    <form onSubmit={this.handleLogin} style={{ padding: 8 }}>\n                        <Grid container spacing={16} direction=\"row\" justify=\"center\">\n                            <Grid item xs={12} sm={6}>\n                                <FormControl margin=\"normal\">\n                                    <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n                                    <Input  autoComplete='off' value={this.state.name}  onChange={this.handleChange('name')} />\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <FormControl margin=\"normal\">\n                                    <InputLabel htmlFor=\"component-simple\">Password</InputLabel>\n                                    <Input  autoComplete='off' type=\"password\" value={this.state.password} onChange={this.handleChange('password')} />\n                                </FormControl>\n                            </Grid>\n                        {/* <Grid container spacing={16} direction=\"row\" justify=\"center\">\n                            <Grid item xs={12} sm={6}>\n                                <FormControl margin=\"normal\">\n                                    <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n                                    <Input id=\"component-simple\" autoComplete='off' value={this.state.name}  onChange={this.handleChange('name')} />\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <FormControl margin=\"normal\">\n                                    <InputLabel htmlFor=\"component-simple\">Password</InputLabel>\n                                    <Input id=\"component-simple\" autoComplete='off' type=\"password\" value={this.state.password} onChange={this.handleChange('password')} />\n                                </FormControl>\n                            </Grid> */}\n                            <Grid item xs={12} sm={6}>\n                                <Button  color=\"primary\" label=\"submit\" type=\"Submit\" variant=\"contained\" >Log In</Button>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <Button onClick={this.handleOpen} color=\"secondary\" variant=\"contained\">Sign Up</Button>\n                            </Grid>\n                        </Grid>\n                        \n                    </form>\n                </Card>\n                <Dialog open={this.state.dialogueOpen} onClose={this.handleClose} className=\"registration-popup\">\n                    <h2>Register for an Account</h2>\n                    <form onSubmit={this.handleRegistration} style={{ padding: 8 }}>\n                        <Grid container spacing={16}  justify=\"center\">\n                            <Grid item xs={6} >\n                                <FormControl required={true}>\n                                    <InputLabel htmlFor=\"component-simple\">Your Username</InputLabel>\n                                    <Input id=\"component-simple\" value={this.state.newUsername} onChange={this.handleChange('newUsername')}/>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <FormControl required={true}>\n                                    <InputLabel htmlFor=\"component-simple\">Your Password</InputLabel>\n                                    <Input id=\"component-simple\" value={this.state.newPassword} onChange={this.handleChange('newPassword')} />\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <p>{this.state.registrationMessage}</p>\n                                <Button color=\"secondary\" label=\"submit\" type=\"Submit\" variant=\"contained\">Create Account</Button>          \n                            </Grid>\n                        </Grid>\n                    </form>\n                </Dialog>                 \n            </div>\n        ) \n    }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nclass SignupSuccess extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            redirect: false\n        }\n    }\n\n    componentDidMount() {\n        this.id = setTimeout(() => this.setState({ redirect: true }), 3000)\n    }\n    \n    componentWillUnmount() {\n        clearTimeout(this.id)\n    }\n\n    render() {\n        return (\n            this.state.redirect ? <Redirect to=\"/\" />\n            :   \n            <div className=\"confirmation-page\">\n                <div className=\"confirmation-message\">\n                    <h1>THANKS FOR JOINING APPLI!</h1>\n                    <h2>You'll be redirected to the login screen shortly.</h2>\n                </div>\n            </div>           \n        ) \n    }\n}\n\nexport default SignupSuccess","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nclass UserAppBar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            anchorEl: null,\n            userMenuEl: null,\n            sortMenu: false,\n            userMenu: false,\n        }\n\n        this.sortMenuClose = this.sortMenuClose.bind(this)\n        this.sortMenuOpen = this.sortMenuOpen.bind(this)\n        this.userMenuClose = this.userMenuClose.bind(this)\n        this.userMenuOpen = this.userMenuOpen.bind(this)\n    }\n\n    sortMenuOpen = (event) => {\n        this.setState({anchorEl: event.currentTarget})\n    }\n\n    sortMenuClose(newSortOrder) {\n        if (newSortOrder === 'newToOld' || newSortOrder === 'oldToNew') {\n            if(newSortOrder === this.props.sortOrder) {\n                this.setState({anchorEl: null})\n\n            }  \n            else {\n                this.props.changeSortOrder(newSortOrder)\n                this.setState({anchorEl: null})\n            }     \n        }\n        else { \n            this.setState({anchorEl: null})\n        }\n    }\n\n    userMenuOpen = (event) => {\n        this.setState({userMenuEl: event.currentTarget})\n    }\n    \n    userMenuClose() { \n        this.setState({userMenuEl: null})\n    }\n    \n    render() {\n        const { anchorEl, userMenuEl } = this.state;\n\n        const styles = {\n            hamburgerButton: {\n                fontSize: '50px',\n                color: 'white'\n            },\n            grow: {\n                flexGrow: 1\n            },\n            grow2: {\n                flexGrow: 2\n            },\n            displayOption:{\n                marginLeft: '1em',\n                marginRight: '1em',\n                \n            },        \n        }\n    \n        return (\n            <div>\n                <AppBar position=\"static\"  >\n                    <Toolbar color=\"primary\">\n                        <Button\n                            style={styles.hamburgerButton}\n                            aria-owns={userMenuEl ? \"user-menu\" : null}\n                            aria-haspopup=\"true\"\n                            onClick={this.userMenuOpen}\n                        >\n                        <MenuIcon style={styles.hamburgerButton} />\n                        </Button>\n                        \n                        <Menu \n                            id=\"user-menu\" \n                            anchorEl={userMenuEl}\n                            open={Boolean(userMenuEl)}\n                            onClose={this.userMenuClose}\n                        >\n                            <MenuItem onClick={this.userMenuClose} style={styles.username}>{this.props.currentUsername}</MenuItem>\n                            <MenuItem onClick={this.userMenuClose}><Link to=\"/inner/settings\" className=\"userbar-link\">User Settings</Link></MenuItem>\n                            <MenuItem onClick={this.props.handleLogout}><Link to=\"/\" className=\"userbar-link\">Log Out</Link></MenuItem>\n\n                        </Menu>\n                        <div style={styles.grow}/>     \n                        <FormControlLabel control={\n                            <Switch checked={this.props.showArchived} \n                                onChange={this.props.handleSwitch('showArchived')} \n                                value=\"showArchived\"\n                                color=\"secondary\"\n                            />                   \n                            }\n                            labelPlacement=\"start\"\n                            label=\"Show Archived Tickets\"\n                            style={styles.displayOption}\n                        />\n                        <Button\n                        style={styles.displayOption }      \n                        aria-owns={anchorEl ? \"sort-form\" : null}\n                        aria-haspopup=\"true\"\n                        onClick={this.sortMenuOpen}\n                        >\n                            Sort By\n                        </Button>\n                        <Menu \n                        id=\"sort-form\" \n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.sortMenuClose}\n                        >\n                        <MenuItem >Sort By</MenuItem>\n                        <MenuItem onClick={() => this.sortMenuClose(\"newToOld\")}>Newest to Oldest</MenuItem>\n                        <MenuItem onClick={() => this.sortMenuClose(\"oldToNew\")}>Oldest to Newest</MenuItem>                               \n                        </Menu>             \n                        <div style={styles.grow}/>             \n                        <h1 className=\"userview-logo\">APPLi</h1>         \n                    </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}\n\nexport default UserAppBar  ","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst spinnerStyle = {\n    color: 'rgb(54, 193, 54)',\n    margin: '0 auto'\n}\n\nconst spinnerContainer = {\n    height: '79vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n\n}\n\nfunction LoadingSpinner() {\n  return (\n    <div style={spinnerContainer}>\n      <CircularProgress style={spinnerStyle} size={100} />\n    </div>\n  );\n}\n\nexport default LoadingSpinner;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons'\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Switch from '@material-ui/core/Switch';\n\nlibrary.add(faHandshake)\n\nclass NewTrackerDialog extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: '',\n      companyName: '',\n      position: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false,\n      openArchiveAlert: false,\n      pleaseArchive: false,\n      loading: true\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.postTicket = this.postTicket.bind(this)\n    this.postArchivedTicket = this.postArchivedTicket.bind(this)\n  }\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleSwitch = name => event => {\n    if (name === 'jobOffered') {\n      this.setState({acceptedOffer: false})\n    }\n    this.setState({ [name]: event.target.checked });\n    \n  };\n\n  postTicket = event => {\n    event.preventDefault();\n\n    if (!this.state.acceptedOffer) {\n      axios({\n        method: 'post',\n        url: '/api/createticket',\n        data: {\n          userId: this.state.userId,\n          companyName: this.state.companyName,\n          position: this.state.position,\n          resumeLink: this.state.resumeLink,\n          includesCoverLetter: this.state.includesCoverLetter,\n          applicationNotes: this.state.applicationNotes,\n          calledForInterview: this.state.calledForInterview,\n          jobOffered: this.state.jobOffered,\n          acceptedOffer: this.state.acceptedOffer,\n          archived: 0\n        }\n      }).then(response => {\n        \n        return this.props.retrieveTickets()          \n      }).then(response => {  \n        this.props.handleClose()\n              \n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    else {\n      this.setState({openArchiveAlert: true})\n    }  \n  }\n\n  postArchivedTicket = decision => {\n\n    let value = -1\n    if (decision === 'yes') {\n      value = 1\n    }\n    else {\n      value = 0\n    }\n\n    axios({\n      method: 'post',\n      url: '/api/createticket',\n      data: {\n        userId: this.state.userId,\n        companyName: this.state.companyName,\n        position: this.state.position,\n        resumeLink: this.state.resumeLink,\n        includesCoverLetter: this.state.includesCoverLetter,\n        applicationNotes: this.state.applicationNotes,\n        calledForInterview: this.state.calledForInterview,\n        jobOffered: this.state.jobOffered,\n        acceptedOffer: this.state.acceptedOffer,\n        archived: value\n      }\n    }).then(response => {\n        return this.props.retrieveTickets()          \n    }).then(response => {  \n        this.props.handleClose()\n    }).catch(error => {\n        console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('jwtToken')) {\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n      this.setState({userId: decoded.id})       \n    }\n    else {\n      this.props.history.push('/')\n    }  \n  }\n\n  render() {\n\n      const styles = {\n        handshake: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        }\n      }\n    \n      return (\n        <div className=\"App\" style={{ padding: 12 }}>\n          <DialogTitle id=\"form-dialog-title\">Create an Application Ticket</DialogTitle>\n          <form onSubmit={this.postTicket}>\n            <Grid container spacing={24} justify=\"center\" align=\"center\">\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  label=\"Company\"\n                  value={this.state.companyName}\n                  placeholder=\"The Company Name\"\n                  onChange={this.handleChange('companyName')}\n                  margin=\"normal\"\n                  variant=\"filled\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  label=\"Position\"\n                  value={this.state.position}\n                  placeholder=\"The Job Title\"\n                  onChange={this.handleChange('position')}\n                  margin=\"normal\"\n                  variant=\"filled\"\n                />                    \n              </Grid>\n              \n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label=\"Resume\"\n                    value={this.state.resumeLink}\n                    placeholder=\"Full Link to Resume\"\n                    onChange={this.handleChange('resumeLink')}\n                    variant=\"filled\"\n                  />     \n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.includesCoverLetter}\n                        onChange={this.handleSwitch('includesCoverLetter')}\n                        value=\"includesCoverLetter\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Includes a Cover Letter?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>                   \n\n              <Grid item xs={12}>\n                <TextField\n                  id=\"filled-textarea\"\n                  value={this.state.applicationNotes}\n                  onChange={this.handleChange('applicationNotes')}\n                  label=\"Notes\"\n                  placeholder=\"Other Important Details\"\n                  multiline\n                  variant=\"filled\"\n                />\n              </Grid>\n              <Grid item xs={12}>             \n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.calledForInterview}\n                      onChange={this.handleSwitch('calledForInterview')}\n                      value=\"calledForInterview\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Have They Requested an Interview?\"\n                  labelPlacement=\"start\"\n                />\n              </Grid>\n              {this.state.calledForInterview ?\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.jobOffered}\n                        onChange={this.handleSwitch('jobOffered')}\n                        value=\"jobOffered\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have I Been Offered the Position?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>\n              : null }         \n              {this.state.jobOffered && this.state.calledForInterview ?\n                <Grid item xs={12}>\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.acceptedOffer}\n                      onChange={this.handleSwitch('acceptedOffer')}\n                      value=\"acceptedOffer\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Have I Accepted the Position?\"\n                  labelPlacement=\"start\"\n                  />\n                </Grid>\n              : null}\n                         \n            </Grid>\n            <DialogContent>\n                  <DialogActions>                    \n                    <Button variant=\"contained\" onClick={this.props.cancel} color=\"secondary\">\n                      Cancel\n                    </Button>\n                    < Button variant=\"contained\" label=\"submit\" type=\"Submit\" color=\"primary\">\n                      Create\n                    </Button>\n                  </DialogActions>\n                </DialogContent>  \n\n            <Dialog open={this.state.openArchiveAlert}>\n              <DialogTitle>{\"You've Accepted the Job Offer\"}</DialogTitle>\n              <DialogContent>\n                <div className=\"handshake\" >\n                  <FontAwesomeIcon icon=\"handshake\" color=\"black\" size=\"7x\" />\n                </div>\n                <DialogContentText>\n                  Congratulations! It appears that you've been hired for this job. Would you like to archive this job ticket?\n                </DialogContentText>\n                <DialogActions>\n                  <Button color=\"primary\" onClick={() => this.postArchivedTicket('yes')}>\n                    Yes\n                  </Button>\n                  <Button color=\"secondary\" onClick={() => this.postArchivedTicket('no')}>\n                    No\n                  </Button>\n                </DialogActions>\n              </DialogContent>\n            </Dialog>            \n          </form>\n        </div>\n      );\n  }\n}\n  \nexport default NewTrackerDialog;","import React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons'\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons'\nimport { faDoorClosed } from '@fortawesome/free-solid-svg-icons'\nimport { faPhone } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faHandshake, faDoorOpen, faPhone, faDoorClosed)\n\nconst brandGreen = '#36c136'\n\n\nexport function applicationProgress(ticket) {\n    if (ticket.accepted_offer) {\n        return (\n            <div>\n                <FontAwesomeIcon icon=\"handshake\" color={brandGreen} size=\"7x\" />\n                <p>Offer Accepted</p>\n            </div>\n        )\n    }\n    else if (ticket.job_offered) {\n        return(\n            <div>\n                <FontAwesomeIcon icon=\"door-open\" color={brandGreen} size=\"7x\" />\n                <p>Position Offered</p>\n            </div>\n        )\n    }\n    else if (ticket.called_for_interview) {\n        return(\n            <div>\n                <FontAwesomeIcon icon=\"phone\" color={brandGreen}  size=\"7x\" />\n                <p>Called for Interview</p>\n            </div>\n        ) \n    }\n    else {\n        return(\n            <div>\n                <FontAwesomeIcon icon=\"door-closed\" color={brandGreen}  size=\"7x\" />\n                <p>Awaiting Employer Response</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport  \"./applicationProgress\";\nimport { applicationProgress } from './applicationProgress.js';\n\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons'\nimport { faCopy } from '@fortawesome/free-solid-svg-icons'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons'\nimport { faDoorClosed } from '@fortawesome/free-solid-svg-icons'\nimport { faPhone } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faHandshake, faCopy, faTimes, faDoorOpen, faPhone, faDoorClosed)\n\nclass Ticket extends Component {\n\n    constructor(props) {\n      super(props)\n    }\n\n    render() {\n      \n      const styles = {\n        card: {\n          root: {\n            height: '300px',\n            hover: {\n              cursor:'pointer'\n            }\n          } \n        },\n                      \n      }\n\n      return (\n        \n        <Card  style={styles.card.root}  className={\"ticket\"}>\n          <CardHeader\n            className={\"ticket-header\"}\n            title={this.props.ticket.company}\n            subheader={this.props.ticket.position}\n          />\n          <CardContent>\n            {applicationProgress(this.props.ticket)}\n          </CardContent>\n        </Card>\n      )\n    }\n}\n\nexport default Ticket;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { applicationProgress } from  \"../applicationProgress\";\n\nimport Button from '@material-ui/core/Button';\nimport BuildIcon from '@material-ui/icons/Build';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy } from '@fortawesome/free-solid-svg-icons'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nlibrary.add(faCopy, faTimes)\n\n\nclass TicketDetails extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            showDeleteWarning: false\n        }\n        this.handleWarningDisplay = this.handleWarningDisplay.bind(this)\n        this.deleteTicket = this.deleteTicket.bind(this)\n    }\n\n    handleWarningDisplay = () => {\n        (this.state.showDeleteWarning) ? \n        this.setState({showDeleteWarning: false}) : this.setState({showDeleteWarning: true})\n    }\n\n    deleteTicket = () => {\n        axios.delete(`/api/deleteticket/${this.props.ticket.ticket_id}`, {headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken') }})\n            .then(response => {\n                return this.props.retrieveTickets()\n\n            })\n            .then(response => {\n                this.props.handleTicketClose()\n            })\n            .catch(error => {\n                console.log(error);\n                \n            }\n        );\n    }\n\n    render() {\n\n        const linkStyle = {\n            color: 'blue'\n        }\n        const brandGreen = '#36c136'\n        const styles ={\n            buttonIcon: {\n                marginLeft: '.5em'\n            },\n            dangerRed: {\n                backgroundColor: 'red',\n                color: 'white'\n            },\n           \n        }\n        \n        return (\n            <div>\n                <DialogTitle>Ticket Details</DialogTitle>\n                <Grid container spacing={24} align=\"center\">\n                    <Grid item xs={4}>\n                        <h3>Company</h3>\n                        <p>{this.props.ticket.company}</p>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <h3>Position</h3>\n                        <p>{this.props.ticket.position}</p>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <h3>Resume Used</h3>\n                        {this.props.ticket.resume_link ?\n                            <div>\n                                <a href={this.props.ticket.resume_link} style={linkStyle}>LINK</a>\n                            </div>\n                        :\n                            <div>\n                                <p>You didn't provide a link to your resume.</p>\n                            </div>\n                        }                      \n                        \n                    </Grid>\n                    <Grid item xs={6}>\n                        <h2>Status</h2>\n                        {applicationProgress(this.props.ticket)}\n                    </Grid>\n                    <Grid item xs={6}>\n                        <h2>Cover Letter</h2>\n                        {this.props.ticket.includes_cover_letter  ?\n                            <div>\n                                <FontAwesomeIcon icon=\"copy\" color={brandGreen} size=\"7x\" />\n                                <p>Yes</p>\n                            </div>\n                            :\n                            <div>\n                                <FontAwesomeIcon icon=\"times\" color=\"red\" size=\"7x\" />\n                                <p>No</p>\n                            </div>\n                        }                       \n                    </Grid>\n                    <Grid item xs={12}>\n                        <p>{(this.props.ticket.application_notes) ? this.props.ticket.application_notes :\n                        \"You didn't provide any notes.\"}</p>\n                    </Grid>\n                </Grid>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.toggleEditDisplay}>\n                        Edit \n                        <BuildIcon  style={styles.buttonIcon}/>\n                    </Button>\n                    <Button variant=\"contained\" style={styles.dangerRed} onClick={this.handleWarningDisplay}>\n                        Delete \n                        <DeleteIcon  style={styles.buttonIcon}/>\n                    </Button>  \n                </DialogActions>\n                <Dialog\n                open={this.state.showDeleteWarning}\n                onClose={this.handleWarningDisplay}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                        Are you sure you want to delete this application ticket?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color='secondary' onClick={this.handleWarningDisplay} >\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" style={styles.dangerRed} onClick={this.deleteTicket}>\n                            Delete \n                        </Button>\n                    </DialogActions>\n                </Dialog> \n            </div>\n        )\n    }\n}\n\nexport default TicketDetails","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\n\nclass EditTicket extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            ticketId: this.props.ticket.ticket_id,\n            companyName: this.props.ticket.company,\n            position: this.props.ticket.position,\n            resumeLink: this.props.ticket.resume_link,\n            includesCoverLetter: this.props.ticket.includes_cover_letter,\n            applicationNotes: this.props.ticket.application_notes,\n            calledForInterview: this.props.ticket.called_for_interview,\n            jobOffered: this.props.ticket.job_offered,\n            acceptedOffer: this.props.ticket.accepted_offer,\n            archived: this.props.ticket.archived,\n\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSwitch = this.handleSwitch.bind(this)\n        this.updateTicket = this.updateTicket.bind(this)\n    }\n\n    handleChange = prop => event => {\n        \n        this.setState({ [prop]: event.target.value });\n        \n    }\n\n    handleSwitch = name => event => {\n        if (name === 'jobOffered') {\n            this.setState({acceptedOffer: false})\n          }\n        this.setState({ [name]: event.target.checked });\n    }\n\n    updateTicket = async (event) => {\n        event.preventDefault();\n        await axios({\n            method: 'put',\n            url: `/api/updateticket/${this.state.ticketId}`,\n            data: {\n                ticketId: this.state.ticketId,\n                companyName: this.state.companyName,\n                position: this.state.position,\n                resumeLink: this.state.resumeLink,\n                includesCoverLetter: this.state.includesCoverLetter,\n                applicationNotes: this.state.applicationNotes,\n                calledForInterview: this.state.calledForInterview,\n                jobOffered: this.state.jobOffered,\n                acceptedOffer: this.state.acceptedOffer,\n                archived: this.state.archived\n            },\n            headers: {                \n                \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')                 \n            }            \n        })\n            \n        .then(async response => {\n            \n            await this.props.retrieveTickets()\n        })\n        // .then(response => {\n            \n        //     // return this.props.getUpdatedTicketDetails()\n        // })\n        .catch(error => {\n            console.log(error)\n        });\n        \n        this.props.handleTicketClose()\n    }\n\n    render() {\n\n        return (\n            <div>\n                <DialogTitle id=\"form-dialog-title\">Edit Ticket</DialogTitle>\n                <form onSubmit={this.updateTicket}>\n                    <Grid container spacing={24} align=\"center\">\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                label=\"Company\"\n                                value={this.state.companyName}\n                                placeholder=\"The Company Name\"\n                                onChange={this.handleChange('companyName')}\n                                margin=\"normal\"\n                                variant=\"filled\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                label=\"Position\"\n                                value={this.state.position}\n                                placeholder=\"The Job Title\"\n                                onChange={this.handleChange('position')}\n                                margin=\"normal\"\n                                variant=\"filled\"\n                            />                    \n                        </Grid>                   \n                        <Grid container spacing={0} >\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    label=\"Resume\"\n                                    value={this.state.resumeLink}\n                                    placeholder=\"A Link to Your Resume\"\n                                    onChange={this.handleChange('resumeLink')}\n                                    variant=\"filled\"\n                                />     \n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.includesCoverLetter}\n                                        onChange={this.handleSwitch('includesCoverLetter')}\n                                        value=\"includesCoverLetter\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"Includes a Cover Letter?\"\n                                    labelPlacement=\"start\"\n                                />\n                            </Grid>\n                              \n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"filled-textarea\"\n                                value={this.state.applicationNotes}\n                                onChange={this.handleChange('applicationNotes')}\n                                label=\"Notes\"\n                                placeholder=\"Other Important Details\"\n                                multiline\n                                variant=\"filled\"\n                                \n                            />\n                        </Grid>\n                        <Grid item xs={12}>                       \n                            <FormControlLabel\n                                control={\n                                <Switch\n                                    checked={this.state.calledForInterview}\n                                    onChange={this.handleSwitch('calledForInterview')}\n                                    value=\"calledForInterview\"\n                                    color=\"primary\"\n                                />\n                                }\n                                label=\"Have They Requested an Interview?\"\n                                labelPlacement=\"start\"\n                            />\n                        </Grid>\n                        {this.state.calledForInterview ?\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.jobOffered}\n                                        onChange={this.handleSwitch('jobOffered')}\n                                        value=\"jobOffered\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"Have I Been Offered the Position?\"\n                                    labelPlacement=\"start\"\n                                />\n                            </Grid>\n                        : null }         \n                        {this.state.jobOffered && this.state.calledForInterview ?\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.acceptedOffer}\n                                    onChange={this.handleSwitch('acceptedOffer')}\n                                    value=\"acceptedOffer\"\n                                    color=\"primary\"\n                                    />\n                                }\n                                label=\"Have I Accepted the Position?\"\n                                labelPlacement=\"start\"\n                                />\n                            </Grid>\n                        : null}\n                        <Grid item xs={12}>\n                            <Grid container spacing = {24}>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.archived}\n                                        onChange={this.handleSwitch('archived')}\n                                        value=\"archived\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"Archive this ticket?\"\n                                    labelPlacement=\"start\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <DialogActions>\n                                        <Button variant=\"contained\" onClick={this.props.toggleEditDisplay}>\n                                            Cancel\n                                        </Button>                               \n                                        <Button variant=\"contained\" color=\"primary\" label=\"submit\" type=\"Submit\">\n                                            Save \n                                        </Button>\n                                    </DialogActions>\n                                </Grid>\n                            </Grid>                                                       \n                        </Grid>\n                    </Grid>                               \n                </form>\n             </div>\n        )\n    }\n\n}\n\nexport default EditTicket","import React, { Component } from 'react'\nimport TicketDetails from './TicketDetails'\nimport EditTicket from './EditTicket'\n\nclass TicketDialog extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showEditForm: false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.toggleEditDisplay = this.toggleEditDisplay.bind(this)\n  }\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleSwitch = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  toggleEditDisplay() {\n  \n    this.setState({showEditForm: !this.state.showEditForm}) \n  }\n\n  render() {     \n    return (\n        <div className=\"App\" style={{ padding: 12 }}>\n            {!this.state.showEditForm ?\n            <TicketDetails ticket={this.props.ticket} toggleEditDisplay={this.toggleEditDisplay} \n            retrieveTickets={this.props.retrieveTickets} handleTicketClose={this.props.handleTicketClose}\n            getUpdatedTicketDetails = {this.props.getUpdatedTicketDetails} \n            />\n\n            \n            :\n            <EditTicket ticket={this.props.ticket} toggleEditDisplay={this.toggleEditDisplay} \n            retrieveTickets={this.props.retrieveTickets} showArchived={this.props.showArchived} \n            getUpdatedTicketDetails={this.props.getUpdatedTicketDetails}\n            handleTicketClose={this.props.handleTicketClose}\n            />\n            }                                      \n        </div>\n    );\n  }\n}\n  \nexport default TicketDialog;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport UserAppBar from './UserAppBar.js'\nimport LoadingSpinner from './LoadingSpinner.js'\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport Ticket from './Ticket.js';\nimport TicketDialog from './TicketDialog/TicketDialog.js';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport Fab from '@material-ui/core/Fab';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\n\nclass UserView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeTicket: -1,\n      currentUsername: '',\n      sortOrder: 'newToOld',\n      loading: false,\n      open: false,\n      openTicket: false,     \n      showArchived: false,\n      ticketDetails: '',\n      userTickets: []\n  \n    }\n    \n    this.changeSortOrder = this.changeSortOrder.bind(this)\n    this.retrieveTickets = this.retrieveTickets.bind(this)\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n    this.handleTicketOpen = this.handleTicketOpen.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleTicketClose = this.handleTicketClose.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.getUpdatedTicketDetails = this.getUpdatedTicketDetails.bind(this)\n  }\n\n  changeSortOrder = newSortOrder => {\n    this.setState({sortOrder: newSortOrder}, () => {\n      this.retrieveTickets()\n    })\n  }\n\n  handleClickOpen() {\n    this.setState({open: true})\n  }\n\n  handleClose() {\n    this.setState({open: false})\n  }\n\n  handleTicketOpen(ticket, index) {\n    this.setState({ticketDetails: ticket, activeTicket: index, openTicket: true})\n  }\n\n  handleTicketClose() {\n    this.setState({openTicket: false})\n  }\n\n  handleSwitch = name => event => {\n    this.setState({ [name]: event.target.checked }, () => {\n      \n      this.retrieveTickets();\n    });\n  };\n\n  retrieveTickets = () => {\n    this.setState({loading: true}, () => {\n      let apiEndpoint = ''     \n      this.state.showArchived ? apiEndpoint = '/api/retrievetickets/showarchived' \n        : apiEndpoint = '/api/retrievetickets/notarchived'\n        axios.get(apiEndpoint, {headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken') }})\n        .then((tickets)=>{\n          let ticketOrder = []\n\n          this.state.sortOrder === 'newToOld' ?\n            //sort tickets from newest to oldest\n            ticketOrder = tickets.data.sort((a, b) => {\n              return new Date(b.creation_date) - new Date(a.creation_date)\n            })\n          :\n            //sort tickets oldest to newest\n            ticketOrder = tickets.data.sort((a, b) => {\n              return new Date(a.creation_date) - new Date(b.creation_date)\n            })\n          \n        this.setState({loading: false, userTickets: ticketOrder}, () => {\n        })\n        this.getUpdatedTicketDetails()\n      }).catch((error)=>{\n        console.log('error ', error);\n        localStorage.removeItem('jwtToken')\n        this.props.history.push('/')\n      });\n    })\n  }\n\n  //get updated ticket details immediately after updating the db and retrieving tickets (aaaaaargh!)\n  getUpdatedTicketDetails = () => {\n    return this.setState({ticketDetails: this.state.userTickets[this.state.activeTicket]}, () => {\n     })\n  }\n\n  componentDidMount() {\n    const storedToken = localStorage.getItem('jwtToken')\n    if (storedToken) {\n      //console.log('there is a token here')\n      let decoded = jwt_decode(storedToken)\n      this.setState({currentUsername: decoded.name})\n      this.retrieveTickets()    \n    }\n    else {\n      //console.log('there is not a token here')\n      localStorage.removeItem('jwtToken')\n      this.props.history.push('/')\n    }    \n  }\n\n  render() {\n\n    const styles = {\n      fabStyle: {\n        color: 'white',\n        position: 'fixed',\n        display: 'block',\n        bottom: '20px',\n        right: '20px'\n      },\n      username: {\n        marginLeft: '1em'\n      },\n      grow: {\n        flexGrow: 1\n      },\n      grow2: {\n        flexGrow: 2\n      },\n      displayOption:{\n        marginLeft: '1em',\n        marginRight: '1em'\n      }\n    }\n       \n    // //decode the jwt's payload.\n    // let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n    // //get the current time\n    // let currentTime = Math.floor(Date.now() / 1000)\n\n    //if the current time on rendering is earlier than the expiration date, show the page.\n    if (localStorage.getItem('jwtToken')) {       \n\n      //decode the jwt's payload.\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n      //get the current time\n      let currentTime = Math.floor(Date.now() / 1000)\n\n      if (currentTime < decoded.exp) {\n        return (\n          <div className=\"App\">   \n            <UserAppBar\n              changeSortOrder={this.changeSortOrder}\n              handleLogout={this.props.handleLogout}\n              currentUsername={this.state.currentUsername}\n              retrieveTickets={this.retrieveTickets}\n              showArchived={this.state.showArchived}\n              sortOrder={this.state.sortOrder}\n              handleSwitch={this.handleSwitch}  \n            /> \n            <div className=\"ticket-tray\" style={{ padding: 8 }}>\n              {\n                this.state.loading ? LoadingSpinner()\n                :             \n                (this.state.userTickets.length >= 1) ?\n                <Fade in={this.state.userTickets}>\n                  <Grid container spacing={16} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    {this.state.userTickets.map((ticket, index) =>\n                      <Grid  key={index.toString()} item xs={6} sm={3} md={2} onClick={()=>this.handleTicketOpen(ticket, index)}>\n                        <Ticket ticket={ticket}  />\n                      </Grid>  \n                    )}\n                  </Grid>\n                </Fade>\n                :\n                <Fade in={this.state.userTickets}>\n                <p> You haven't made any job tickets yet.</p>\n                </Fade>\n              }\n              <Fab color=\"primary\" onClick={this.handleClickOpen} style={styles.fabStyle} >\n                <AddIcon  />\n              </Fab>\n            </div>\n\n            {/* new ticket Form */}\n            <Dialog open={this.state.open} onClose={this.handleClose}  aria-labelledby=\"form-dialog-title\">\n              <NewTrackerDialog currentUsername={'yes'} cancel={this.handleClose} \n              handleClose={this.handleClose} retrieveTickets={this.retrieveTickets}\n              />\n            </Dialog>\n\n            {/* view ticket details */}\n            <Dialog open={this.state.openTicket} onClose={this.handleTicketClose} >\n              <TicketDialog close={this.handleTicketClose} handleTicketClose={this.handleTicketClose}\n                ticket={this.state.ticketDetails} retrieveTickets={this.retrieveTickets}\n                getUpdatedTicketDetails = {this.getUpdatedTicketDetails} showArchived={this.state.showArchived} />\n            </Dialog>\n        </div>\n        );\n      }\n      else {\n        localStorage.removeItem('jwtToken')\n        return (<Redirect to=\"/\" />) \n      }\n\n    }\n    //otherwise, send the user to the login page.\n    else { \n      return (<Redirect to=\"/\" />) \n    }\n  }\n}\n\nexport default UserView;","import React, { Component } from 'react';\n\nclass UserStyle extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n\n        }\n    }\n\n    render() {\n\n        return(\n            <div>\n                <h1>User Style</h1>\n                <p>Coming soon.</p>\n            </div>\n        )\n    }\n}\n\nexport default UserStyle","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport LoadingSpinner from '../UserView/LoadingSpinner.js' \n\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\n\nclass ChangePassword extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            oldPassword: '',\n            newPassword: '',\n            loading: false,\n            fading: true,\n            didUpdatePW: false,\n            incorrectPW: false\n        }\n        this.updatePassword = this.updatePassword.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n      };\n\n    updatePassword = event => {\n        event.preventDefault();\n        let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n\n        this.setState({loading: true}, () => {\n            return axios({\n                method: 'put',\n                url: `/api/updatepassword`,\n                data: {\n                    oldPassword: this.state.oldPassword,\n                    newPassword: this.state.newPassword,\n                    username: decoded.name\n                },\n                headers: {                \n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')                 \n                }  \n                })\n                .then(response => {                          \n                    \n                    this.setState({loading: false, didUpdatePW: true})      \n                 })\n                .catch((error) => {\n                    \n                    this.setState({loading: false, incorrectPW: true})\n\n                }\n            );\n        }) \n    }\n\n    render() {\n\n        let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n        //get the current time\n        let currentTime = Math.floor(Date.now() / 1000)\n\n        //if the current time on rendering is earlier than the expiration date, show the page.\n        if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n            return(\n            <div>\n            {\n                this.state.loading ? \n                LoadingSpinner()\n                :\n                this.state.didUpdatePW ?\n                <Fade in={this.state.didUpdatePW}>\n                    <h1>Your Password Has Been Updated</h1>\n                </Fade>\n                :\n                <div>\n                    \n                <h1>{this.state.incorrectPW ? \"Error: Incorrect Password\" : \"Change Your Password\"}</h1>\n                <form onSubmit={this.updatePassword} style={{ padding: 8 }}>                    \n                    <Grid container spacing={16}>\n                        <Grid item xs={6}>\n                            <FormControl margin=\"normal\">\n                                <InputLabel htmlFor=\"component-simple\">Current Password</InputLabel>\n                                <Input id=\"component-simple\" autoComplete='off' \n                                value={this.state.oldPassword}  \n                                onChange={this.handleChange('oldPassword')} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControl margin=\"normal\">\n                                <InputLabel htmlFor=\"component-simple\">New Password</InputLabel>\n                                <Input id=\"component-simple\" autoComplete='off' \n                                value={this.state.newPassword}  \n                                onChange={this.handleChange('newPassword')} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button type=\"Submit\" color=\"primary\" variant=\"contained\" label=\"create\">Submit</Button> \n                        </Grid>\n                    </Grid>                                                   \n                </form>\n                \n                </div>\n            }\n            </div>\n        )} \n        //otherwise, send the user to the login page.\n        else { \n          return (<Redirect to=\"/\" />) \n        } \n    }\n}\n\nexport default ChangePassword","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport jwt_decode from 'jwt-decode';\n\nimport UserStyle from './UserStyle.js'\nimport ChangePassword from './ChangePassword'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nclass UserSettings extends Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n          value: 0,\n        }\n        this.handleTab = this. handleTab.bind(this)\n    }\n\n    handleTab = (event, value) => {\n      this.setState({value});\n    };\n  \n    render() {\n\n      const styles = {\n        \n        settingsCard: {\n          margin: '5em auto',\n          maxWidth: '633px'\n        },\n        username: {\n          marginLeft: '1em'\n        },\n        grow: {\n          flexGrow: 1\n        },\n        grow2: {\n          flexGrow: 2\n        },\n        displayOption:{\n          marginLeft: '1em',\n          marginRight: '1em'\n        },\n        tab: {\n          backgroundColor: 'rgb(54, 193, 54)',\n          color: 'white',\n          \n        }\n      }\n\n      const { value } = this.state;\n\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n        //get the current time\n        let currentTime = Math.floor(Date.now() / 1000)\n\n        //if the current time on rendering is earlier than the expiration date, show the page.\n        if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n          return(\n            <div style={styles.background}>\n              {/* Navigation Bar */}\n                <AppBar position=\"static\" >\n                  <Toolbar >\n                    <Button onClick={this.props.handleLogout}><Link to=\"/\">LOG OUT</Link></Button>\n                    <Button><Link to=\"/inner\">My Job Tickets</Link></Button>                                 \n                    <div style={styles.grow}/>             \n                    <h1 className=\"userview-logo\">APPLi</h1>         \n                  </Toolbar>\n                </AppBar>\n                {/* Settings Card */}\n                <Card style={styles.settingsCard}>\n                  <Tabs\n                   \n                    style={styles.tab}\n                    value={value}\n                    onChange={this.handleTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"                    \n                  >\n                    <Tab label=\"User Style\" style={styles.tab}  />\n                    <Tab label=\"Reset Password\" style={styles.tab}  />\n                  </Tabs>\n                  <CardContent>\n                    {value === 0 && <UserStyle />}\n                    {value === 1 && <ChangePassword />}\n                  </CardContent>\n                </Card>\n              </div>\n          )\n        } \n        else {\n          return (<Redirect to=\"/\" />) \n        }\n    }\n}\n\nexport default UserSettings","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport Home from './Home/Home.js';\nimport SignupSuccess from './SignupSuccess/SignupSuccess.js'\nimport UserView from './UserView/UserView.js'\nimport UserSettings from './UserSettings/UserSettings.js'\n\nimport './App.css';\n\nlibrary.add(faArrowLeft)\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    \n  }\n\n  handleLogout() {\n    localStorage.removeItem('jwtToken')\n  }\n\n  render() {\n\n    return (\n\n        <Router>\n          <div className=\"app\">\n            <Route exact path=\"/\" render={(props) => \n              <Home {...props} />\n            }/>\n            <Route path=\"/signupsuccess\" component={SignupSuccess} />\n            <Route exact path=\"/inner\" render={(props) => \n              <UserView  handleLogout={this.handleLogout} {...props} />\n            }/>\n            <Route exact path=\"/inner/settings\" render={(props) => \n              <UserSettings handleLogout={this.handleLogout} {...props} />\n            }/>\n          </div> \n        </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst muiTheme = createMuiTheme({\n    palette: {\n        primary: { \n            main: '#36c136',\n            contrastText: '#fff', \n        }, \n        secondary: { main: '#4286f4' },\n        background:{\n            paper:'white',\n            default:\"#fafafa\"}\n    }\n});\n\n\n\nexport default muiTheme\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport myColorTheme from './MyColorTheme'\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n  <MuiThemeProvider theme={myColorTheme}>\n    <App />\n  </MuiThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}