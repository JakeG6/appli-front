{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/UserView.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport TicketDialog from './TicketDialog/TicketDialog.js';\nimport Ticket from './Ticket.js';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport jwt_decode from 'jwt-decode';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\nvar UserView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserView, _Component);\n\n  function UserView(props) {\n    var _this;\n\n    _classCallCheck(this, UserView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserView).call(this, props));\n\n    _this.retrieveTickets = function () {\n      return axios.get('/retrievetickets', {\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')\n        }\n      }).then(function (tickets) {\n        var ticketsNewestToOldest = tickets.data.sort(function (a, b) {\n          return new Date(b.date) - new Date(a.date);\n        }); //console.log(ticketsNewestToOldest)\n\n        _this.setState({\n          userTickets: ticketsNewestToOldest\n        }); //dispatch(getUsersData(data));\n\n      }).catch(function (error) {\n        console.log('error ', error);\n\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.getUpdatedTicketDetails = function () {\n      return _this.setState({\n        ticketDetails: _this.state.userTickets[_this.state.activeTicket]\n      });\n    };\n\n    _this.state = {\n      open: false,\n      openTicket: false,\n      showArchived: false,\n      currentUsername: '',\n      userTickets: [],\n      activeTicket: -1,\n      ticketDetails: '' //this.addMostUpdatedTicket = this.addMostUpdatedTicket.bind(this)\n\n    };\n    _this.retrieveTickets = _this.retrieveTickets.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTicketOpen = _this.handleTicketOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTicketClose = _this.handleTicketClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getUpdatedTicketDetails = _this.getUpdatedTicketDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // addMostUpdatedTicket(ticketId) {\n  //   return axios.get(`/retrieveticketbyid/${ticketId}`)\n  //     .then(response => {\n  //       const updatedTicket = response.data[0]\n  //       const index = updatedTicket.ticket_id\n  //     })\n  // }\n\n\n  _createClass(UserView, [{\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleTicketOpen\",\n    value: function handleTicketOpen(ticket, index) {\n      this.setState({\n        ticketDetails: ticket,\n        activeTicket: index,\n        openTicket: true\n      }, function () {});\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleTicketClose\",\n    value: function handleTicketClose() {\n      this.setState({\n        openTicket: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.getItem('jwtToken')) {\n        var decoded = jwt_decode(localStorage.getItem('jwtToken'));\n        this.setState({\n          currentUsername: decoded.name\n        });\n        this.retrieveTickets();\n      } else {\n        localStorage.removeItem('jwtToken');\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var primary = lightGreen.A400;\n      var fabStyle = {\n        color: 'white',\n        position: 'fixed',\n        display: 'block',\n        bottom: '20px',\n        right: '20px' //decode the jwt's payload.\n\n      };\n      var decoded = jwt_decode(localStorage.getItem('jwtToken')); //get the current time\n\n      var currentTime = Math.floor(Date.now() / 1000); //if the current time on rendering is earlier than the expiration date, show the page.\n\n      if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(AppBar, {\n          position: \"static\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Toolbar, {\n          color: primary,\n          className: \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"white-text\",\n          onClick: this.props.handleLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"LOG OUT\")), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Hello \", this.state.currentUsername), React.createElement(\"h1\", {\n          className: \"green userview-logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"APPLi\"))), React.createElement(\"div\", {\n          className: \"ticket-tray\",\n          style: {\n            padding: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, this.state.userTickets.length > 1 ? React.createElement(Grid, {\n          container: true,\n          spacing: 16,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, this.state.userTickets.map(function (ticket, index) {\n          return React.createElement(Grid, {\n            key: index.toString(),\n            item: true,\n            xs: 6,\n            sm: 3,\n            md: 2,\n            onClick: function onClick() {\n              return _this2.handleTicketOpen(ticket, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(Ticket, {\n            ticket: ticket,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }));\n        })) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \" You haven't made any job tickets yet.\"), React.createElement(Fab, {\n          onClick: this.handleClickOpen,\n          style: fabStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          className: 'green',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }))), React.createElement(Dialog, {\n          open: this.state.open,\n          onClose: this.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(NewTrackerDialog, {\n          currentUsername: 'yes',\n          cancel: this.handleClose,\n          handleClose: this.handleClose,\n          retrieveTickets: this.retrieveTickets,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        })), React.createElement(Dialog, {\n          open: this.state.openTicket,\n          onClose: this.handleTicketClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(TicketDialog, {\n          close: this.handleTicketClose,\n          handleTicketClose: this.handleTicketClose,\n          ticket: this.state.ticketDetails,\n          retrieveTickets: this.retrieveTickets,\n          getUpdatedTicketDetails: this.getUpdatedTicketDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })));\n      } //otherwise, send the user to the login page.\n      else {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          });\n        }\n    }\n  }]);\n\n  return UserView;\n}(Component);\n\nexport default UserView;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/UserView.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Redirect","NewTrackerDialog","TicketDialog","Ticket","lightGreen","jwt_decode","Grid","AppBar","Toolbar","Dialog","Button","Fab","AddIcon","axios","UserView","props","retrieveTickets","get","headers","localStorage","getItem","then","tickets","ticketsNewestToOldest","data","sort","a","b","Date","date","setState","userTickets","catch","error","console","log","history","push","getUpdatedTicketDetails","ticketDetails","state","activeTicket","open","openTicket","showArchived","currentUsername","bind","handleClickOpen","handleTicketOpen","handleClose","handleTicketClose","ticket","index","decoded","name","removeItem","primary","A400","fabStyle","color","position","display","bottom","right","currentTime","Math","floor","now","exp","handleLogout","padding","length","map","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport TicketDialog from './TicketDialog/TicketDialog.js';\nimport Ticket from './Ticket.js';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport jwt_decode from 'jwt-decode';\n\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\nclass UserView extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      openTicket: false,\n      showArchived: false,\n      currentUsername: '',\n      userTickets: [],\n      activeTicket: -1,\n      ticketDetails: ''\n    }\n\n    //this.addMostUpdatedTicket = this.addMostUpdatedTicket.bind(this)\n    this.retrieveTickets = this.retrieveTickets.bind(this)\n\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n    this.handleTicketOpen = this.handleTicketOpen.bind(this)\n\n    this.handleClose = this.handleClose.bind(this)\n    this.handleTicketClose = this.handleTicketClose.bind(this)\n    this.getUpdatedTicketDetails = this.getUpdatedTicketDetails.bind(this)\n\n  }\n\n  // addMostUpdatedTicket(ticketId) {\n  //   return axios.get(`/retrieveticketbyid/${ticketId}`)\n  //     .then(response => {\n  //       const updatedTicket = response.data[0]\n  //       const index = updatedTicket.ticket_id\n        \n  //     })\n  // }\n\n  handleClickOpen() {\n    this.setState({open: true})\n  }\n\n  handleTicketOpen(ticket, index) {\n    this.setState({ticketDetails: ticket, activeTicket: index, openTicket: true}, () => {\n    })\n  }\n\n  handleClose() {\n    this.setState({open: false})\n  }\n\n  handleTicketClose() {\n    this.setState({openTicket: false})\n  }\n\n  retrieveTickets = () => {\n  \n    return axios.get('/retrievetickets', {headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken') }}).then((tickets)=>{\n\n      let ticketsNewestToOldest = tickets.data.sort((a, b) => {\n        return new Date(b.date) - new Date(a.date)\n      })\n\n      //console.log(ticketsNewestToOldest)\n\n      this.setState({userTickets: ticketsNewestToOldest})\n      //dispatch(getUsersData(data));\n    }).catch((error)=>{\n      console.log('error ', error);\n      this.props.history.push('/')\n    });\n\n  }\n\n  ///get updated ticket details immediately after updating the db and retrieving tickets (aaaaaargh!)\n  getUpdatedTicketDetails = () => {\n    return this.setState({ticketDetails: this.state.userTickets[this.state.activeTicket]  })\n  }\n\n\n\n  componentDidMount() {\n    if (localStorage.getItem('jwtToken')) {\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n      this.setState({currentUsername: decoded.name})\n      this.retrieveTickets()    \n    }\n    else {\n      localStorage.removeItem('jwtToken')\n      this.props.history.push('/')\n    }\n    \n  }\n\n  render() {\n\n    const primary = lightGreen.A400;\n    const fabStyle = {\n      color: 'white',\n      \n      position: 'fixed',\n      display: 'block',\n      bottom: '20px',\n      right: '20px'\n    }\n       \n    //decode the jwt's payload.\n    let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n    //get the current time\n    let currentTime = Math.floor(Date.now() / 1000)\n\n    //if the current time on rendering is earlier than the expiration date, show the page.\n    if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) { \n      \n      return (\n        <div className=\"App\">\n          <AppBar position=\"static\" >\n            <Toolbar color={primary} className=\"green\">\n              <Button className=\"white-text\" onClick={this.props.handleLogout}><Link to=\"/\">LOG OUT</Link></Button>\n              <p>Hello {this.state.currentUsername}</p>  \n              <h1 className=\"green userview-logo\">APPLi</h1>         \n            </Toolbar>\n          </AppBar>   \n\n          <div className=\"ticket-tray\" style={{ padding: 8 }}>\n            {(this.state.userTickets.length > 1) ?\n              <Grid container spacing={16} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {this.state.userTickets.map((ticket, index) =>\n\n                  <Grid  key={index.toString()} item xs={6} sm={3} md={2} onClick={()=>this.handleTicketOpen(ticket, index)}>\n                    <Ticket ticket={ticket}   />\n                  </Grid>  \n                )}\n              </Grid>\n              :\n              <p> You haven't made any job tickets yet.</p>\n            }\n            <Fab  onClick={this.handleClickOpen} style={fabStyle} >\n              <AddIcon className={'green'}/>\n            </Fab>\n          </div>\n\n          {/* new ticket Form */}\n          <Dialog open={this.state.open} onClose={this.handleClose}  aria-labelledby=\"form-dialog-title\">\n            <NewTrackerDialog currentUsername={'yes'} cancel={this.handleClose} \n            handleClose={this.handleClose} retrieveTickets={this.retrieveTickets}/>\n          </Dialog>\n\n          {/* view ticket details */}\n          <Dialog open={this.state.openTicket} onClose={this.handleTicketClose} >\n            <TicketDialog close={this.handleTicketClose} handleTicketClose={this.handleTicketClose}\n              ticket={this.state.ticketDetails} retrieveTickets={this.retrieveTickets}\n              getUpdatedTicketDetails = {this.getUpdatedTicketDetails}  />\n          </Dialog>\n\n          \n       </div>\n      );\n    }\n    //otherwise, send the user to the login page.\n    else { \n      return (<Redirect to=\"/\" />) \n    }\n\n  }\n\n}\n\nexport default UserView;"]},"metadata":{},"sourceType":"module"}