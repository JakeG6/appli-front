{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport jwt_decode from 'jwt-decode';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\n\nvar NewTrackerDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewTrackerDialog, _Component);\n\n  function NewTrackerDialog(props) {\n    var _this;\n\n    _classCallCheck(this, NewTrackerDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTrackerDialog).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.handleSwitch = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.postTicket = function (event) {\n      event.preventDefault();\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: _this.state.userId,\n          companyName: _this.state.companyName,\n          position: _this.state.position,\n          resumeLink: _this.state.resumeLink,\n          includesCoverLetter: _this.state.includesCoverLetter,\n          applicationNotes: _this.state.applicationNotes,\n          calledForInterview: _this.state.calledForInterview,\n          jobOffered: _this.state.jobOffered,\n          acceptedOffer: _this.state.acceptedOffer,\n          archived: 0\n        }\n      }).then(function (response) {\n        console.log(\"the ticket was posted.\");\n\n        _this.props.handleClose();\n\n        console.log(\"we've closed the dialog\");\n\n        _this.props.retrieveTickets();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      userId: '',\n      companyName: '',\n      position: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSwitch = _this.handleSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postTicket = _this.postTicket.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewTrackerDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('jwtToken')) {\n        var decoded = jwt_decode(localStorage.getItem('jwtToken'));\n        console.log(decoded);\n        this.setState({\n          userId: decoded.id\n        }, function () {\n          console.log(\"new tickets will go to \".concat(_this2.state.userId));\n        });\n      } else {\n        this.props.history.push('/');\n      }\n\n      console.log(this.state.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          padding: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Create an Application Ticket\"), React.createElement(\"form\", {\n        onSubmit: this.postTicket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Company\",\n        value: this.state.companyName,\n        placeholder: \"The Company Name\",\n        onChange: this.handleChange('companyName'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Position\",\n        value: this.state.position,\n        placeholder: \"The Job Title\",\n        onChange: this.handleChange('position'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        j: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Resume\",\n        value: this.state.resumeLink,\n        placeholder: \"A Link to Your Resume\",\n        onChange: this.handleChange('resumeLink'),\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.includesCoverLetter,\n          onChange: this.handleSwitch('includesCoverLetter'),\n          value: \"includesCoverLetter\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }),\n        label: \"Includes a Cover Letter?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-textarea\",\n        value: this.state.applicationNotes,\n        onChange: this.handleChange('applicationNotes'),\n        label: \"Notes\",\n        placeholder: \"Other Important Details\",\n        multiline: true,\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.calledForInterview,\n          onChange: this.handleSwitch('calledForInterview'),\n          value: \"calledForInterview\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }),\n        label: \"Have They Requested an Interview?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.jobOffered,\n          onChange: this.handleSwitch('jobOffered'),\n          value: \"jobOffered\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }),\n        label: \"Have I Been Offered the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })) : null, this.state.jobOffered && this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.acceptedOffer,\n          onChange: this.handleSwitch('acceptedOffer'),\n          value: \"acceptedOffer\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }),\n        label: \"Have I Accepted the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })) : null, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        label: \"submit\",\n        type: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.props.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Cancel\")))))));\n    }\n  }]);\n\n  return NewTrackerDialog;\n}(Component);\n\nexport default NewTrackerDialog;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js"],"names":["React","Component","axios","BrowserRouter","Router","Route","Link","Redirect","Button","TextField","FormControlLabel","ClearIcon","jwt_decode","Grid","DialogTitle","FormControl","Switch","NewTrackerDialog","props","handleChange","prop","event","setState","target","value","handleSwitch","name","checked","postTicket","preventDefault","method","url","data","userId","state","companyName","position","resumeLink","includesCoverLetter","applicationNotes","calledForInterview","jobOffered","acceptedOffer","archived","then","response","console","log","handleClose","retrieveTickets","catch","error","bind","localStorage","getItem","decoded","id","history","push","padding","cancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport jwt_decode from 'jwt-decode';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\n\n\nclass NewTrackerDialog extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        userId: '',\n        companyName: '',\n        position: '',\n        resumeLink: '',\n        includesCoverLetter: false,\n        applicationNotes: '',\n        calledForInterview: false,\n        jobOffered: false,\n        acceptedOffer: false,\n        \n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSwitch = this.handleSwitch.bind(this)\n      this.postTicket = this.postTicket.bind(this)\n    }\n\n    handleChange = prop => event => {\n      this.setState({ [prop]: event.target.value });\n    };\n\n    handleSwitch = name => event => {\n      this.setState({ [name]: event.target.checked });\n    };\n\n    postTicket = event => {\n      event.preventDefault();\n\n      \n\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: this.state.userId,\n          companyName: this.state.companyName,\n          position: this.state.position,\n          resumeLink: this.state.resumeLink,\n          includesCoverLetter: this.state.includesCoverLetter,\n          applicationNotes: this.state.applicationNotes,\n          calledForInterview: this.state.calledForInterview,\n          jobOffered: this.state.jobOffered,\n          acceptedOffer: this.state.acceptedOffer,\n          archived: 0\n        }\n      }).then(response => {\n        \n        console.log(\"the ticket was posted.\")\n        this.props.handleClose()\n        console.log(\"we've closed the dialog\")\n        this.props.retrieveTickets()\n        \n        \n        \n        \n        \n      })\n      .catch(error => {\n     \n        console.log(error);\n      });\n\n      \n      \n    }\n\n    componentDidMount() {\n    \n        if (localStorage.getItem('jwtToken')) {\n          let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n          console.log(decoded)\n          this.setState({userId: decoded.id}, () => {\n            console.log(`new tickets will go to ${this.state.userId}`)\n\n          })\n          \n        }\n        else {\n          this.props.history.push('/')\n        }\n        \n      \n      console.log(this.state.userId)\n    }\n\n    render() {\n      \n        return (\n          <div className=\"App\" style={{ padding: 12 }}>\n            <DialogTitle id=\"form-dialog-title\">Create an Application Ticket</DialogTitle>\n\n            <form onSubmit={this.postTicket}>\n              <Grid container spacing={24}>\n                <Grid item xs={6}>\n                  <TextField\n                    required\n                    label=\"Company\"\n                    value={this.state.companyName}\n                    placeholder=\"The Company Name\"\n                    onChange={this.handleChange('companyName')}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    required\n                    label=\"Position\"\n                    value={this.state.position}\n                    placeholder=\"The Job Title\"\n                    onChange={this.handleChange('position')}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                  />                    \n                </Grid>\n              \n                  <Grid container spacing={0} j>\n                    <Grid item xs={6}>\n                      <TextField\n                        label=\"Resume\"\n                        value={this.state.resumeLink}\n                        placeholder=\"A Link to Your Resume\"\n                        onChange={this.handleChange('resumeLink')}\n                        variant=\"filled\"\n                      />     \n                    </Grid>\n                    <Grid item xs={3}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={this.state.includesCoverLetter}\n                            onChange={this.handleSwitch('includesCoverLetter')}\n                            value=\"includesCoverLetter\"\n                            color=\"primary\"\n                          />\n                        }\n                        label=\"Includes a Cover Letter?\"\n                        labelPlacement=\"start\"\n                      />\n                    </Grid> \n                   \n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"filled-textarea\"\n                    value={this.state.applicationNotes}\n                    onChange={this.handleChange('applicationNotes')}\n                    label=\"Notes\"\n                    placeholder=\"Other Important Details\"\n                    multiline\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                \n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.calledForInterview}\n                        onChange={this.handleSwitch('calledForInterview')}\n                        value=\"calledForInterview\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have They Requested an Interview?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>\n          \n                  {this.state.calledForInterview ?\n                    <Grid item xs={12}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={this.state.jobOffered}\n                            onChange={this.handleSwitch('jobOffered')}\n                            value=\"jobOffered\"\n                            color=\"primary\"\n                          />\n                        }\n                        label=\"Have I Been Offered the Position?\"\n                        labelPlacement=\"start\"\n                      />\n                    </Grid>\n                  : null }         \n                  {this.state.jobOffered && this.state.calledForInterview ?\n                    <Grid item xs={12}>\n                      <FormControlLabel\n                      control={\n                        <Switch\n                          checked={this.state.acceptedOffer}\n                          onChange={this.handleSwitch('acceptedOffer')}\n                          value=\"acceptedOffer\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Have I Accepted the Position?\"\n                      labelPlacement=\"start\"\n                      />\n                    </Grid>\n                  : null}\n                <Grid item xs={12}>\n                  <Grid container spacing={8} justify=\"center\">\n                    <Grid item xs={3} >\n                      < Button variant=\"contained\" label=\"submit\" type=\"Submit\">\n                        Create\n                      </Button>\n                    </Grid>\n                    <Grid item xs={3} >\n                      <Button variant=\"contained\" onClick={this.props.cancel}>\n                        Cancel\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>            \n            </form>\n         </div>\n        );\n    }\n  }\n  \n  export default NewTrackerDialog;"]},"metadata":{},"sourceType":"module"}