{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //import ClearIcon from '@material-ui/icons/Clear';\n\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nlibrary.add(faHandshake);\n\nvar NewTrackerDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewTrackerDialog, _Component);\n\n  function NewTrackerDialog(props) {\n    var _this;\n\n    _classCallCheck(this, NewTrackerDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTrackerDialog).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.handleSwitch = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.postTicket = function (event) {\n      event.preventDefault();\n\n      if (!_this.state.acceptedOffer) {\n        axios({\n          method: 'post',\n          url: 'http://localhost:4242/createticket',\n          data: {\n            userId: _this.state.userId,\n            companyName: _this.state.companyName,\n            position: _this.state.position,\n            resumeLink: _this.state.resumeLink,\n            includesCoverLetter: _this.state.includesCoverLetter,\n            applicationNotes: _this.state.applicationNotes,\n            calledForInterview: _this.state.calledForInterview,\n            jobOffered: _this.state.jobOffered,\n            acceptedOffer: _this.state.acceptedOffer,\n            archived: 0\n          }\n        }).then(function (response) {\n          console.log(\"the ticket was posted.\");\n          return _this.props.retrieveTickets();\n        }).then(function (response) {\n          _this.props.handleClose();\n\n          console.log(\"we've closed the dialog\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        _this.setState({\n          openArchiveAlert: true\n        });\n      }\n    };\n\n    _this.state = {\n      userId: '',\n      companyName: '',\n      position: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false,\n      openArchiveAlert: false,\n      pleaseArchive: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSwitch = _this.handleSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postTicket = _this.postTicket.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postArchivedTicket = _this.postArchivedTicket.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewTrackerDialog, [{\n    key: \"postArchivedTicket\",\n    value: function postArchivedTicket(decision) {\n      var _this2 = this;\n\n      console.log('a decision has been made');\n\n      if (decision === 'yes') {\n        axios({\n          method: 'post',\n          url: 'http://localhost:4242/createticket',\n          data: {\n            userId: this.state.userId,\n            companyName: this.state.companyName,\n            position: this.state.position,\n            resumeLink: this.state.resumeLink,\n            includesCoverLetter: this.state.includesCoverLetter,\n            applicationNotes: this.state.applicationNotes,\n            calledForInterview: this.state.calledForInterview,\n            jobOffered: this.state.jobOffered,\n            acceptedOffer: this.state.acceptedOffer,\n            archived: 1\n          }\n        }).then(function (response) {\n          console.log(\"the ticket was posted.\");\n          return _this2.props.retrieveTickets();\n        }).then(function (response) {\n          _this2.props.handleClose();\n\n          console.log(\"we've closed the dialog\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        axios({\n          method: 'post',\n          url: 'http://localhost:4242/createticket',\n          data: {\n            userId: this.state.userId,\n            companyName: this.state.companyName,\n            position: this.state.position,\n            resumeLink: this.state.resumeLink,\n            includesCoverLetter: this.state.includesCoverLetter,\n            applicationNotes: this.state.applicationNotes,\n            calledForInterview: this.state.calledForInterview,\n            jobOffered: this.state.jobOffered,\n            acceptedOffer: this.state.acceptedOffer,\n            archived: 0\n          }\n        }).then(function (response) {\n          console.log(\"the ticket was posted.\");\n          return _this2.props.retrieveTickets();\n        }).then(function (response) {\n          _this2.props.handleClose();\n\n          console.log(\"we've closed the dialog\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (localStorage.getItem('jwtToken')) {\n        var decoded = jwt_decode(localStorage.getItem('jwtToken'));\n        console.log(decoded);\n        this.setState({\n          userId: decoded.id\n        }, function () {\n          console.log(\"new tickets will go to \".concat(_this3.state.userId));\n        });\n      } else {\n        this.props.history.push('/');\n      }\n\n      console.log(this.state.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          padding: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Create an Application Ticket\"), React.createElement(\"form\", {\n        onSubmit: this.postTicket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Company\",\n        value: this.state.companyName,\n        placeholder: \"The Company Name\",\n        onChange: this.handleChange('companyName'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Position\",\n        value: this.state.position,\n        placeholder: \"The Job Title\",\n        onChange: this.handleChange('position'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        j: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Resume\",\n        value: this.state.resumeLink,\n        placeholder: \"A Link to Your Resume\",\n        onChange: this.handleChange('resumeLink'),\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.includesCoverLetter,\n          onChange: this.handleSwitch('includesCoverLetter'),\n          value: \"includesCoverLetter\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }),\n        label: \"Includes a Cover Letter?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-textarea\",\n        value: this.state.applicationNotes,\n        onChange: this.handleChange('applicationNotes'),\n        label: \"Notes\",\n        placeholder: \"Other Important Details\",\n        multiline: true,\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.calledForInterview,\n          onChange: this.handleSwitch('calledForInterview'),\n          value: \"calledForInterview\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }),\n        label: \"Have They Requested an Interview?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.jobOffered,\n          onChange: this.handleSwitch('jobOffered'),\n          value: \"jobOffered\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }),\n        label: \"Have I Been Offered the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })) : null, this.state.jobOffered && this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.acceptedOffer,\n          onChange: this.handleSwitch('acceptedOffer'),\n          value: \"acceptedOffer\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }),\n        label: \"Have I Accepted the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })) : null, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        label: \"submit\",\n        type: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.props.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(Dialog, {\n        open: this.state.openArchiveAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"You've Accepted the Job Offer\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"handshake\",\n        color: \"black\",\n        size: \"7x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Congratulations! It appears that you've been hired for this job. Would you like to archive this job ticket?\"), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this4.postArchivedTicket('yes');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this4.postArchivedTicket('no');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"No\"))))));\n    }\n  }]);\n\n  return NewTrackerDialog;\n}(Component);\n\nexport default NewTrackerDialog;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js"],"names":["React","Component","axios","jwt_decode","library","FontAwesomeIcon","faHandshake","Button","TextField","FormControlLabel","Grid","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Switch","add","NewTrackerDialog","props","handleChange","prop","event","setState","target","value","handleSwitch","name","checked","postTicket","preventDefault","state","acceptedOffer","method","url","data","userId","companyName","position","resumeLink","includesCoverLetter","applicationNotes","calledForInterview","jobOffered","archived","then","response","console","log","retrieveTickets","handleClose","catch","error","openArchiveAlert","pleaseArchive","bind","postArchivedTicket","decision","localStorage","getItem","decoded","id","history","push","padding","cancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons'\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n//import ClearIcon from '@material-ui/icons/Clear';\n\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Switch from '@material-ui/core/Switch';\n\nlibrary.add(faHandshake)\n\nclass NewTrackerDialog extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: '',\n      companyName: '',\n      position: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false,\n      openArchiveAlert: false,\n      pleaseArchive: false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.postTicket = this.postTicket.bind(this)\n    this.postArchivedTicket = this.postArchivedTicket.bind(this)\n  }\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleSwitch = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  postTicket = event => {\n    event.preventDefault();\n\n    if (!this.state.acceptedOffer) {\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: this.state.userId,\n          companyName: this.state.companyName,\n          position: this.state.position,\n          resumeLink: this.state.resumeLink,\n          includesCoverLetter: this.state.includesCoverLetter,\n          applicationNotes: this.state.applicationNotes,\n          calledForInterview: this.state.calledForInterview,\n          jobOffered: this.state.jobOffered,\n          acceptedOffer: this.state.acceptedOffer,\n          archived: 0\n        }\n      }).then(response => {\n        console.log(\"the ticket was posted.\")\n        return this.props.retrieveTickets()          \n      }).then(response => {  \n        this.props.handleClose()\n        console.log(\"we've closed the dialog\")      \n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    else {\n      this.setState({openArchiveAlert: true})\n    }  \n  }\n\n  postArchivedTicket(decision) {\n    console.log('a decision has been made')\n    if (decision === 'yes') {\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: this.state.userId,\n          companyName: this.state.companyName,\n          position: this.state.position,\n          resumeLink: this.state.resumeLink,\n          includesCoverLetter: this.state.includesCoverLetter,\n          applicationNotes: this.state.applicationNotes,\n          calledForInterview: this.state.calledForInterview,\n          jobOffered: this.state.jobOffered,\n          acceptedOffer: this.state.acceptedOffer,\n          archived: 1\n        }\n      }).then(response => {\n        console.log(\"the ticket was posted.\")\n        return this.props.retrieveTickets()          \n      }).then(response => {  \n        this.props.handleClose()\n        console.log(\"we've closed the dialog\")      \n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    else {\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: this.state.userId,\n          companyName: this.state.companyName,\n          position: this.state.position,\n          resumeLink: this.state.resumeLink,\n          includesCoverLetter: this.state.includesCoverLetter,\n          applicationNotes: this.state.applicationNotes,\n          calledForInterview: this.state.calledForInterview,\n          jobOffered: this.state.jobOffered,\n          acceptedOffer: this.state.acceptedOffer,\n          archived: 0\n        }\n      }).then(response => {\n        console.log(\"the ticket was posted.\")\n        return this.props.retrieveTickets()          \n      }).then(response => {  \n        this.props.handleClose()\n        console.log(\"we've closed the dialog\")      \n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    \n  }\n\n  componentDidMount() {\n  \n      if (localStorage.getItem('jwtToken')) {\n        let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n        console.log(decoded)\n        this.setState({userId: decoded.id}, () => {\n          console.log(`new tickets will go to ${this.state.userId}`)\n\n        })\n        \n      }\n      else {\n        this.props.history.push('/')\n      }\n      \n    \n    console.log(this.state.userId)\n  }\n\n  render() {\n    \n      return (\n        <div className=\"App\" style={{ padding: 12 }}>\n          <DialogTitle id=\"form-dialog-title\">Create an Application Ticket</DialogTitle>\n\n          <form onSubmit={this.postTicket}>\n            <Grid container spacing={24}>\n              <Grid item xs={6}>\n                <TextField\n                  required\n                  label=\"Company\"\n                  value={this.state.companyName}\n                  placeholder=\"The Company Name\"\n                  onChange={this.handleChange('companyName')}\n                  margin=\"normal\"\n                  variant=\"filled\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  required\n                  label=\"Position\"\n                  value={this.state.position}\n                  placeholder=\"The Job Title\"\n                  onChange={this.handleChange('position')}\n                  margin=\"normal\"\n                  variant=\"filled\"\n                />                    \n              </Grid>             \n                <Grid container spacing={0} j>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Resume\"\n                      value={this.state.resumeLink}\n                      placeholder=\"A Link to Your Resume\"\n                      onChange={this.handleChange('resumeLink')}\n                      variant=\"filled\"\n                    />     \n                  </Grid>\n                  <Grid item xs={3}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={this.state.includesCoverLetter}\n                          onChange={this.handleSwitch('includesCoverLetter')}\n                          value=\"includesCoverLetter\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Includes a Cover Letter?\"\n                      labelPlacement=\"start\"\n                    />\n                  </Grid> \n                  \n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"filled-textarea\"\n                  value={this.state.applicationNotes}\n                  onChange={this.handleChange('applicationNotes')}\n                  label=\"Notes\"\n                  placeholder=\"Other Important Details\"\n                  multiline\n                  variant=\"filled\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n              \n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.calledForInterview}\n                      onChange={this.handleSwitch('calledForInterview')}\n                      value=\"calledForInterview\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Have They Requested an Interview?\"\n                  labelPlacement=\"start\"\n                />\n              </Grid>\n        \n                {this.state.calledForInterview ?\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={this.state.jobOffered}\n                          onChange={this.handleSwitch('jobOffered')}\n                          value=\"jobOffered\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Have I Been Offered the Position?\"\n                      labelPlacement=\"start\"\n                    />\n                  </Grid>\n                : null }         \n                {this.state.jobOffered && this.state.calledForInterview ?\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.acceptedOffer}\n                        onChange={this.handleSwitch('acceptedOffer')}\n                        value=\"acceptedOffer\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have I Accepted the Position?\"\n                    labelPlacement=\"start\"\n                    />\n                  </Grid>\n                : null}\n              <Grid item xs={12}>\n                <Grid container spacing={8} justify=\"center\">\n                  <Grid item xs={3} >\n                    < Button variant=\"contained\" label=\"submit\" type=\"Submit\">\n                      Create\n                    </Button>\n                  </Grid>\n                  <Grid item xs={3} >\n                    <Button variant=\"contained\" onClick={this.props.cancel}>\n                      Cancel\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Dialog open={this.state.openArchiveAlert}>\n              <DialogTitle>{\"You've Accepted the Job Offer\"}</DialogTitle>\n              <DialogContent>\n              <FontAwesomeIcon icon=\"handshake\" color=\"black\" size=\"7x\" />\n\n                <DialogContentText>\n                  Congratulations! It appears that you've been hired for this job. Would you like to archive this job ticket?\n                </DialogContentText>\n                <DialogActions>\n                  <Button color=\"primary\" onClick={() => this.postArchivedTicket('yes')}>\n                    Yes\n                  </Button>\n                  <Button color=\"primary\" onClick={() => this.postArchivedTicket('no')}>\n                    No\n                  </Button>\n                </DialogActions>\n              </DialogContent>\n            </Dialog>            \n          </form>\n        </div>\n      );\n  }\n}\n  \nexport default NewTrackerDialog;"]},"metadata":{},"sourceType":"module"}