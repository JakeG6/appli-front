{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport Grid from '@material-ui/core/Grid';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nlibrary.add(faHandshake);\n\nvar NewTrackerDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewTrackerDialog, _Component);\n\n  function NewTrackerDialog(props) {\n    var _this;\n\n    _classCallCheck(this, NewTrackerDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTrackerDialog).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.handleSwitch = function (name) {\n      return function (event) {\n        if (name === 'jobOffered') {\n          _this.setState({\n            acceptedOffer: false\n          });\n        }\n\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.postTicket = function (event) {\n      event.preventDefault();\n\n      if (!_this.state.acceptedOffer) {\n        axios({\n          method: 'post',\n          url: 'http://localhost:4242/createticket',\n          data: {\n            userId: _this.state.userId,\n            companyName: _this.state.companyName,\n            position: _this.state.position,\n            resumeLink: _this.state.resumeLink,\n            includesCoverLetter: _this.state.includesCoverLetter,\n            applicationNotes: _this.state.applicationNotes,\n            calledForInterview: _this.state.calledForInterview,\n            jobOffered: _this.state.jobOffered,\n            acceptedOffer: _this.state.acceptedOffer,\n            archived: 0\n          }\n        }).then(function (response) {\n          console.log(\"the ticket was posted.\");\n          return _this.props.retrieveTickets();\n        }).then(function (response) {\n          _this.props.handleClose();\n\n          console.log(\"we've closed the dialog\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        _this.setState({\n          openArchiveAlert: true\n        });\n      }\n    };\n\n    _this.postArchivedTicket = function (decision) {\n      console.log('a decision has been made: ', decision);\n      var value = -1;\n\n      if (decision === 'yes') {\n        value = 1;\n      } else {\n        value = 0;\n      }\n\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: _this.state.userId,\n          companyName: _this.state.companyName,\n          position: _this.state.position,\n          resumeLink: _this.state.resumeLink,\n          includesCoverLetter: _this.state.includesCoverLetter,\n          applicationNotes: _this.state.applicationNotes,\n          calledForInterview: _this.state.calledForInterview,\n          jobOffered: _this.state.jobOffered,\n          acceptedOffer: _this.state.acceptedOffer,\n          archived: value\n        }\n      }).then(function (response) {\n        return _this.props.retrieveTickets();\n      }).then(function (response) {\n        _this.props.handleClose();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      userId: '',\n      companyName: '',\n      position: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false,\n      openArchiveAlert: false,\n      pleaseArchive: false,\n      loading: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSwitch = _this.handleSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postTicket = _this.postTicket.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postArchivedTicket = _this.postArchivedTicket.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewTrackerDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.getItem('jwtToken')) {\n        var decoded = jwt_decode(localStorage.getItem('jwtToken')); //console.log(decoded)\n\n        this.setState({\n          userId: decoded.id\n        });\n      } else {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var styles = {\n        handshake: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          padding: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Create an Application Ticket\"), React.createElement(\"form\", {\n        onSubmit: this.postTicket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        justify: \"center\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Company\",\n        value: this.state.companyName,\n        placeholder: \"The Company Name\",\n        onChange: this.handleChange('companyName'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Position\",\n        value: this.state.position,\n        placeholder: \"The Job Title\",\n        onChange: this.handleChange('position'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Resume\",\n        value: this.state.resumeLink,\n        placeholder: \"Full Link to Resume\",\n        onChange: this.handleChange('resumeLink'),\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.includesCoverLetter,\n          onChange: this.handleSwitch('includesCoverLetter'),\n          value: \"includesCoverLetter\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }),\n        label: \"Includes a Cover Letter?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-textarea\",\n        value: this.state.applicationNotes,\n        onChange: this.handleChange('applicationNotes'),\n        label: \"Notes\",\n        placeholder: \"Other Important Details\",\n        multiline: true,\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.calledForInterview,\n          onChange: this.handleSwitch('calledForInterview'),\n          value: \"calledForInterview\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }),\n        label: \"Have They Requested an Interview?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.jobOffered,\n          onChange: this.handleSwitch('jobOffered'),\n          value: \"jobOffered\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }),\n        label: \"Have I Been Offered the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })) : null, this.state.jobOffered && this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.acceptedOffer,\n          onChange: this.handleSwitch('acceptedOffer'),\n          value: \"acceptedOffer\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }),\n        label: \"Have I Accepted the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })) : null), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.props.cancel,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        label: \"submit\",\n        type: \"Submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Create\"))), React.createElement(Dialog, {\n        open: this.state.openArchiveAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"You've Accepted the Job Offer\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.handshake,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"handshake\",\n        color: \"black\",\n        size: \"7x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Congratulations! It appears that you've been hired for this job. Would you like to archive this job ticket?\"), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.postArchivedTicket('yes');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.postArchivedTicket('no');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"No\"))))));\n    }\n  }]);\n\n  return NewTrackerDialog;\n}(Component);\n\nexport default NewTrackerDialog;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js"],"names":["React","Component","axios","jwt_decode","Grid","library","FontAwesomeIcon","faHandshake","Button","TextField","FormControlLabel","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Switch","add","NewTrackerDialog","props","handleChange","prop","event","setState","target","value","handleSwitch","name","acceptedOffer","checked","postTicket","preventDefault","state","method","url","data","userId","companyName","position","resumeLink","includesCoverLetter","applicationNotes","calledForInterview","jobOffered","archived","then","response","console","log","retrieveTickets","handleClose","catch","error","openArchiveAlert","postArchivedTicket","decision","pleaseArchive","loading","bind","localStorage","getItem","decoded","id","history","push","styles","handshake","marginLeft","marginRight","padding","cancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons'\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Switch from '@material-ui/core/Switch';\n\nlibrary.add(faHandshake)\n\nclass NewTrackerDialog extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: '',\n      companyName: '',\n      position: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false,\n      openArchiveAlert: false,\n      pleaseArchive: false,\n      loading: true\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.postTicket = this.postTicket.bind(this)\n    this.postArchivedTicket = this.postArchivedTicket.bind(this)\n  }\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleSwitch = name => event => {\n    if (name === 'jobOffered') {\n      this.setState({acceptedOffer: false})\n    }\n    this.setState({ [name]: event.target.checked });\n    \n  };\n\n  postTicket = event => {\n    event.preventDefault();\n\n    if (!this.state.acceptedOffer) {\n      axios({\n        method: 'post',\n        url: 'http://localhost:4242/createticket',\n        data: {\n          userId: this.state.userId,\n          companyName: this.state.companyName,\n          position: this.state.position,\n          resumeLink: this.state.resumeLink,\n          includesCoverLetter: this.state.includesCoverLetter,\n          applicationNotes: this.state.applicationNotes,\n          calledForInterview: this.state.calledForInterview,\n          jobOffered: this.state.jobOffered,\n          acceptedOffer: this.state.acceptedOffer,\n          archived: 0\n        }\n      }).then(response => {\n        console.log(\"the ticket was posted.\")\n        return this.props.retrieveTickets()          \n      }).then(response => {  \n        this.props.handleClose()\n        console.log(\"we've closed the dialog\")      \n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    else {\n      this.setState({openArchiveAlert: true})\n    }  \n  }\n\n  postArchivedTicket = decision => {\n    console.log('a decision has been made: ', decision)\n\n    let value = -1\n    if (decision === 'yes') {\n      value = 1\n    }\n    else {\n      value = 0\n    }\n\n    axios({\n      method: 'post',\n      url: 'http://localhost:4242/createticket',\n      data: {\n        userId: this.state.userId,\n        companyName: this.state.companyName,\n        position: this.state.position,\n        resumeLink: this.state.resumeLink,\n        includesCoverLetter: this.state.includesCoverLetter,\n        applicationNotes: this.state.applicationNotes,\n        calledForInterview: this.state.calledForInterview,\n        jobOffered: this.state.jobOffered,\n        acceptedOffer: this.state.acceptedOffer,\n        archived: value\n      }\n    }).then(response => {\n      return this.props.retrieveTickets()          \n    }).then(response => {  \n      this.props.handleClose()\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('jwtToken')) {\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n      //console.log(decoded)\n      this.setState({userId: decoded.id})       \n    }\n    else {\n      this.props.history.push('/')\n    }  \n  }\n\n  render() {\n\n      const styles = {\n        handshake: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        }\n      }\n    \n      return (\n        <div className=\"App\" style={{ padding: 12 }}>\n          <DialogTitle id=\"form-dialog-title\">Create an Application Ticket</DialogTitle>\n          <form onSubmit={this.postTicket}>\n            <Grid container spacing={24} justify=\"center\" align=\"center\">\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  label=\"Company\"\n                  value={this.state.companyName}\n                  placeholder=\"The Company Name\"\n                  onChange={this.handleChange('companyName')}\n                  margin=\"normal\"\n                  variant=\"filled\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  label=\"Position\"\n                  value={this.state.position}\n                  placeholder=\"The Job Title\"\n                  onChange={this.handleChange('position')}\n                  margin=\"normal\"\n                  variant=\"filled\"\n                />                    \n              </Grid>\n              \n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label=\"Resume\"\n                    value={this.state.resumeLink}\n                    placeholder=\"Full Link to Resume\"\n                    onChange={this.handleChange('resumeLink')}\n                    variant=\"filled\"\n                  />     \n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.includesCoverLetter}\n                        onChange={this.handleSwitch('includesCoverLetter')}\n                        value=\"includesCoverLetter\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Includes a Cover Letter?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>                   \n\n              <Grid item xs={12}>\n                <TextField\n                  id=\"filled-textarea\"\n                  value={this.state.applicationNotes}\n                  onChange={this.handleChange('applicationNotes')}\n                  label=\"Notes\"\n                  placeholder=\"Other Important Details\"\n                  multiline\n                  variant=\"filled\"\n                />\n              </Grid>\n              <Grid item xs={12}>             \n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.calledForInterview}\n                      onChange={this.handleSwitch('calledForInterview')}\n                      value=\"calledForInterview\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Have They Requested an Interview?\"\n                  labelPlacement=\"start\"\n                />\n              </Grid>\n              {this.state.calledForInterview ?\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.jobOffered}\n                        onChange={this.handleSwitch('jobOffered')}\n                        value=\"jobOffered\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have I Been Offered the Position?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>\n              : null }         \n              {this.state.jobOffered && this.state.calledForInterview ?\n                <Grid item xs={12}>\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.acceptedOffer}\n                      onChange={this.handleSwitch('acceptedOffer')}\n                      value=\"acceptedOffer\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Have I Accepted the Position?\"\n                  labelPlacement=\"start\"\n                  />\n                </Grid>\n              : null}\n                         \n            </Grid>\n            <DialogContent>\n                  <DialogActions>                    \n                    <Button variant=\"contained\" onClick={this.props.cancel} color=\"secondary\">\n                      Cancel\n                    </Button>\n                    < Button variant=\"contained\" label=\"submit\" type=\"Submit\" color=\"primary\">\n                      Create\n                    </Button>\n                  </DialogActions>\n                </DialogContent>  \n\n            <Dialog open={this.state.openArchiveAlert}>\n              <DialogTitle>{\"You've Accepted the Job Offer\"}</DialogTitle>\n              <DialogContent>\n                <div style={styles.handshake}>\n                <FontAwesomeIcon icon=\"handshake\" color=\"black\" size=\"7x\" />\n                </div>\n                <DialogContentText>\n                  Congratulations! It appears that you've been hired for this job. Would you like to archive this job ticket?\n                </DialogContentText>\n                <DialogActions>\n                  <Button color=\"primary\" onClick={() => this.postArchivedTicket('yes')}>\n                    Yes\n                  </Button>\n                  <Button color=\"primary\" onClick={() => this.postArchivedTicket('no')}>\n                    No\n                  </Button>\n                </DialogActions>\n              </DialogContent>\n            </Dialog>            \n          </form>\n        </div>\n      );\n  }\n}\n  \nexport default NewTrackerDialog;"]},"metadata":{},"sourceType":"module"}