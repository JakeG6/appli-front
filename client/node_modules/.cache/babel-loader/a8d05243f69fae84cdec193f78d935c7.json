{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/UserView.js\";\nimport React, { Component } from 'react';\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport Ticket from './Ticket.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport jwt_decode from 'jwt-decode';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\nvar UserView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserView, _Component);\n\n  function UserView(props) {\n    var _this;\n\n    _classCallCheck(this, UserView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserView).call(this, props));\n    _this.state = {\n      open: false,\n      currentUsername: '',\n      userTickets: []\n    };\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserView, [{\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('jwtToken')) {\n        var decoded = jwt_decode(localStorage.getItem('jwtToken'));\n        console.log(decoded);\n        this.setState({\n          currentUsername: decoded.name\n        });\n        axios.get('/retrievetickets', {\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')\n          }\n        }).then(function (tickets) {\n          console.log('data coming', tickets);\n\n          _this2.setState({\n            userTickets: tickets.data\n          }); //dispatch(getUsersData(data));\n\n        }).catch(function (error) {\n          console.log('error ', error);\n\n          _this2.props.history.push('/');\n        });\n      } else {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var primary = lightGreen.A400; //let ticketArray = []\n      //decode the jwt's payload.\n\n      var decoded = jwt_decode(localStorage.getItem('jwtToken')); //get the current time\n\n      var currentTime = Math.floor(Date.now() / 1000); //if the current time on rendering is earlier than the expiration date, show the page.\n\n      if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(AppBar, {\n          position: \"static\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Toolbar, {\n          color: primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"white-text\",\n          onClick: this.props.handleLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"LOG OUT\")), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Hello \", this.state.currentUsername))), React.createElement(\"div\", {\n          style: {\n            padding: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, this.state.userTickets ? React.createElement(Grid, {\n          container: true,\n          spacing: 16,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, this.state.userTickets.map(function (ticket, index) {\n          return React.createElement(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(Ticket, {\n            company: ticket.company,\n            position: ticket.position,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }));\n        })) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Welcome $\", this.state.currentUsername, \". You haven't made any job tickets yet.\")), React.createElement(Dialog, {\n          open: this.state.open,\n          onClose: this.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(NewTrackerDialog, {\n          currentUsername: 'yes',\n          cancel: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })), React.createElement(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"Add\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        })));\n      } //otherwise, send the user to the login page.\n      else {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          });\n        }\n    }\n  }]);\n\n  return UserView;\n}(Component);\n\nexport default UserView;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/UserView.js"],"names":["React","Component","NewTrackerDialog","Ticket","BrowserRouter","Router","Route","Link","Redirect","lightGreen","jwt_decode","Grid","AppBar","Toolbar","TextField","Dialog","Card","CardHeader","CardMedia","CardContent","CardActions","Button","Fab","AddIcon","axios","UserView","props","state","open","currentUsername","userTickets","handleClickOpen","bind","handleClose","setState","localStorage","getItem","decoded","console","log","name","get","headers","then","tickets","data","catch","error","history","push","primary","A400","currentTime","Math","floor","Date","now","exp","handleLogout","padding","map","ticket","index","company","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport Ticket from './Ticket.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport jwt_decode from 'jwt-decode';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\n\n\nclass UserView extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      currentUsername: '',\n      userTickets: []\n    }\n\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    \n  }\n\n  handleClickOpen() {\n    this.setState({open: true})\n  }\n\n  handleClose() {\n    this.setState({open: false})\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('jwtToken')) {\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n      console.log(decoded)\n      this.setState({currentUsername: decoded.name})\n      axios.get('/retrievetickets', {headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken') }}).then((tickets)=>{\n        console.log('data coming', tickets);\n        this.setState({userTickets: tickets.data})\n        //dispatch(getUsersData(data));\n      }).catch((error)=>{\n        console.log('error ', error);\n        this.props.history.push('/')\n      });\n    }\n    else {\n      this.props.history.push('/')\n    }\n    \n  }\n\n\n  render() {\n    const primary = lightGreen.A400;\n\n    //let ticketArray = []\n\n    \n    //decode the jwt's payload.\n    let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n    //get the current time\n    let currentTime = Math.floor(Date.now() / 1000)\n    //if the current time on rendering is earlier than the expiration date, show the page.\n    if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) { \n      return (\n        <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar  color={primary}>\n            <Button className=\"white-text\" onClick={this.props.handleLogout}><Link to=\"/\">LOG OUT</Link></Button>\n            <p>Hello {this.state.currentUsername}</p>\n            \n          </Toolbar>\n        </AppBar>    \n          {/* <p>This is where your tickets will go.</p> */}\n\n          <div style={{ padding: 8 }}>\n            {(this.state.userTickets) ?\n\n              <Grid container spacing={16} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {this.state.userTickets.map((ticket, index) =>\n                  <Grid item xs={2}>\n                    <Ticket company={ticket.company} position={ticket.position}/>\n                  </Grid>  \n                )}\n              </Grid>\n              :\n              <p>Welcome ${this.state.currentUsername}. You haven't made any job tickets yet.</p>\n            }\n\n            \n            \n          </div>\n        \n        <Dialog open={this.state.open} onClose={this.handleClose}  aria-labelledby=\"form-dialog-title\">\n          <NewTrackerDialog currentUsername={'yes'} cancel={this.handleClose} />\n        </Dialog>\n        <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleClickOpen}>\n          <AddIcon />\n        </Fab>\n       </div>\n      );\n    }\n    //otherwise, send the user to the login page.\n    else { \n      return (<Redirect to=\"/\" />) \n    }\n\n  }\n}\n\nexport default UserView;"]},"metadata":{},"sourceType":"module"}