{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nvar NewTrackerDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewTrackerDialog, _Component);\n\n  function NewTrackerDialog(props) {\n    var _this;\n\n    _classCallCheck(this, NewTrackerDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTrackerDialog).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.state = {\n      companyName: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewTrackerDialog, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Create an Application Tracker\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Input, {\n        id: \"component-simple\",\n        value: this.state.newUsername,\n        onChange: this.handleChange('newUsername'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Your Username\"), React.createElement(Input, {\n        id: \"component-simple\",\n        value: this.state.newUsername,\n        onChange: this.handleChange('newUsername'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Your Username\"), React.createElement(Input, {\n        id: \"component-simple\",\n        value: this.state.newUsername,\n        onChange: this.handleChange('newUsername'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Your Username\"), React.createElement(Input, {\n        id: \"component-simple\",\n        value: this.state.newUsername,\n        onChange: this.handleChange('newUsername'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Your Username\"), React.createElement(Input, {\n        id: \"component-simple\",\n        value: this.state.newUsername,\n        onChange: this.handleChange('newUsername'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return NewTrackerDialog;\n}(Component);\n\nexport default NewTrackerDialog;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Redirect","lightGreen","AppBar","Toolbar","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","Button","Fab","AddIcon","Icon","DeleteIcon","NavigationIcon","NewTrackerDialog","props","handleChange","prop","event","setState","target","value","state","companyName","newUsername"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nclass NewTrackerDialog extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        companyName: '',\n      }\n    }\n\n    handleChange = prop => event => {\n      this.setState({ [prop]: event.target.value });\n    };\n\n    render() {\n      \n        return (\n          <div className=\"App\">\n              <DialogTitle id=\"form-dialog-title\">Create an Application Tracker</DialogTitle>\n              <form>\n                <FormControl required={true}>\n                  <InputLabel htmlFor=\"component-simple\">Company Name</InputLabel>\n                  <Input id=\"component-simple\" value={this.state.newUsername} onChange={this.handleChange('newUsername')}/>\n                </FormControl>\n                <FormControl required={true}>\n                  <InputLabel htmlFor=\"component-simple\">Your Username</InputLabel>\n                  <Input id=\"component-simple\" value={this.state.newUsername} onChange={this.handleChange('newUsername')}/>\n                </FormControl>\n                <FormControl required={true}>\n                  <InputLabel htmlFor=\"component-simple\">Your Username</InputLabel>\n                  <Input id=\"component-simple\" value={this.state.newUsername} onChange={this.handleChange('newUsername')}/>\n                </FormControl>\n                <FormControl required={true}>\n                  <InputLabel htmlFor=\"component-simple\">Your Username</InputLabel>\n                  <Input id=\"component-simple\" value={this.state.newUsername} onChange={this.handleChange('newUsername')}/>\n                </FormControl>\n                <FormControl required={true}>\n                  <InputLabel htmlFor=\"component-simple\">Your Username</InputLabel>\n                  <Input id=\"component-simple\" value={this.state.newUsername} onChange={this.handleChange('newUsername')}/>\n                </FormControl>\n              </form>\n         </div>\n        );\n  \n    }\n  }\n  \n  export default NewTrackerDialog;"]},"metadata":{},"sourceType":"module"}