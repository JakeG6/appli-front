{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\n\nvar NewTrackerDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewTrackerDialog, _Component);\n\n  function NewTrackerDialog(props) {\n    var _this;\n\n    _classCallCheck(this, NewTrackerDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTrackerDialog).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.handleSwitch = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.state = {\n      companyName: '',\n      positionTitle: '',\n      resumeLink: '',\n      includesCoverLetter: false,\n      applicationNotes: '',\n      calledForInterview: false,\n      jobOffered: false,\n      acceptedOffer: false,\n      archived: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSwitch = _this.handleSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewTrackerDialog, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          padding: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Create an Application Ticket\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Company\",\n        value: this.state.companyName,\n        placeholder: \"The Company Name\",\n        onChange: this.handleChange('companyName'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Position\",\n        value: this.state.positionTitle,\n        placeholder: \"The Job Title\",\n        onChange: this.handleChange('positionTitle'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Resume\",\n        value: this.state.resumeLink,\n        placeholder: \"A Link to Your Resume\",\n        onChange: this.handleChange('resumeLink'),\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.includesCoverLetter,\n          onChange: this.handleSwitch('includesCoverLetter'),\n          value: \"includesCoverLetter\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }),\n        label: \"Includes a Cover Letter?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-textarea\",\n        value: this.state.applicationNotes,\n        onChange: this.handleChange('applicationNotes'),\n        label: \"Notes\",\n        placeholder: \"Other Important Details\",\n        multiline: true,\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.calledForInterview,\n          onChange: this.handleSwitch('calledForInterview'),\n          value: \"calledForInterview\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }),\n        label: \"Have They Requested an Interview?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.jobOffered,\n          onChange: this.handleSwitch('jobOffered'),\n          value: \"jobOffered\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }),\n        label: \"Have I Been Offered the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.acceptedOffer,\n          onChange: this.handleSwitch('acceptedOffer'),\n          value: \"acceptedOffer\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }),\n        label: \"Have I Accepted the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return NewTrackerDialog;\n}(Component);\n\nexport default NewTrackerDialog;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/NewTrackerDialog.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Redirect","Button","TextField","FormControlLabel","Grid","DialogTitle","FormControl","Switch","NewTrackerDialog","props","handleChange","prop","event","setState","target","value","handleSwitch","name","checked","state","companyName","positionTitle","resumeLink","includesCoverLetter","applicationNotes","calledForInterview","jobOffered","acceptedOffer","archived","bind","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport Switch from '@material-ui/core/Switch';\n\n\nclass NewTrackerDialog extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        companyName: '',\n        positionTitle: '',\n        resumeLink: '',\n        includesCoverLetter: false,\n        applicationNotes: '',\n        calledForInterview: false,\n        jobOffered: false,\n        acceptedOffer: false,\n        archived: false\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSwitch = this.handleSwitch.bind(this)\n\n    }\n\n    handleChange = prop => event => {\n      this.setState({ [prop]: event.target.value });\n    };\n\n    handleSwitch = name => event => {\n      this.setState({ [name]: event.target.checked });\n    };\n\n    render() {\n      \n        return (\n          <div className=\"App\" style={{ padding: 12 }}>\n            <DialogTitle id=\"form-dialog-title\">Create an Application Ticket</DialogTitle>\n            <form>\n              <Grid container spacing={24}>\n                <Grid item xs={6}>\n                  <TextField\n                    required\n                    label=\"Company\"\n                    value={this.state.companyName}\n                    placeholder=\"The Company Name\"\n                    onChange={this.handleChange('companyName')}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    required\n                    label=\"Position\"\n                    value={this.state.positionTitle}\n                    placeholder=\"The Job Title\"\n                    onChange={this.handleChange('positionTitle')}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                  />                    \n                </Grid>\n              \n                  <Grid container spacing={0}>\n                    <Grid item xs={6}>\n                      <TextField\n                        label=\"Resume\"\n                        value={this.state.resumeLink}\n                        placeholder=\"A Link to Your Resume\"\n                        onChange={this.handleChange('resumeLink')}\n                        variant=\"filled\"\n                      />     \n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={this.state.includesCoverLetter}\n                            onChange={this.handleSwitch('includesCoverLetter')}\n                            value=\"includesCoverLetter\"\n                            color=\"primary\"\n                          />\n                        }\n                        label=\"Includes a Cover Letter?\"\n                        labelPlacement=\"start\"\n                      />\n                    </Grid> \n                   \n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"filled-textarea\"\n                    value={this.state.applicationNotes}\n                    onChange={this.handleChange('applicationNotes')}\n                    label=\"Notes\"\n                    placeholder=\"Other Important Details\"\n                    multiline\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                \n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.calledForInterview}\n                        onChange={this.handleSwitch('calledForInterview')}\n                        value=\"calledForInterview\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have They Requested an Interview?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>\n                <Grid item xs={6}>               \n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.jobOffered}\n                        onChange={this.handleSwitch('jobOffered')}\n                        value=\"jobOffered\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have I Been Offered the Position?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.acceptedOffer}\n                        onChange={this.handleSwitch('acceptedOffer')}\n                        value=\"acceptedOffer\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Have I Accepted the Position?\"\n                    labelPlacement=\"start\"\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  < Button variant=\"contained\">\n                    Create\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  < Button variant=\"contained\">\n                    Cancel\n                  </Button>\n                </Grid>\n              </Grid>            \n            </form>\n         </div>\n        );\n  \n    }\n  }\n  \n  export default NewTrackerDialog;"]},"metadata":{},"sourceType":"module"}