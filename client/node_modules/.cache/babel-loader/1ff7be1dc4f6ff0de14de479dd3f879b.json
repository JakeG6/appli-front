{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/TicketDialog/EditTicket.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nvar EditTicket =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditTicket, _Component);\n\n  function EditTicket(props) {\n    var _this;\n\n    _classCallCheck(this, EditTicket);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditTicket).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.handleSwitch = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.updateTicket = function (event) {\n      event.preventDefault();\n      axios({\n        method: 'put',\n        url: \"http://localhost:4242/updateticket/\".concat(_this.state.ticketId),\n        data: {\n          ticketId: _this.state.ticketId,\n          companyName: _this.state.companyName,\n          position: _this.state.position,\n          resumeLink: _this.state.resumeLink,\n          includesCoverLetter: _this.state.includesCoverLetter,\n          applicationNotes: _this.state.applicationNotes,\n          calledForInterview: _this.state.calledForInterview,\n          jobOffered: _this.state.jobOffered,\n          acceptedOffer: _this.state.acceptedOffer,\n          archived: _this.state.archived\n        },\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')\n        }\n      }).then(function (response) {\n        return _this.props.retrieveTickets();\n      }).then(function (response) {\n        _this.props.getUpdatedTicketDetails();\n\n        return _this.props.toggleEditDisplay();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      ticketId: _this.props.ticket.ticket_id,\n      companyName: _this.props.ticket.company,\n      position: _this.props.ticket.position,\n      resumeLink: _this.props.ticket.resume_link,\n      includesCoverLetter: _this.props.ticket.includes_cover_letter,\n      applicationNotes: _this.props.ticket.application_notes,\n      calledForInterview: _this.props.ticket.called_for_interview,\n      jobOffered: _this.props.ticket.job_offered,\n      acceptedOffer: _this.props.ticket.accepted_offer,\n      archived: _this.props.ticket.archived\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSwitch = _this.handleSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTicket = _this.updateTicket.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditTicket, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.updateTicket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Company\",\n        value: this.state.companyName,\n        placeholder: \"The Company Name\",\n        onChange: this.handleChange('companyName'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Position\",\n        value: this.state.position,\n        placeholder: \"The Job Title\",\n        onChange: this.handleChange('position'),\n        margin: \"normal\",\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Resume\",\n        value: this.state.resumeLink,\n        placeholder: \"A Link to Your Resume\",\n        onChange: this.handleChange('resumeLink'),\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.includesCoverLetter,\n          onChange: this.handleSwitch('includesCoverLetter'),\n          value: \"includesCoverLetter\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }),\n        label: \"Includes a Cover Letter?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.archived,\n          onChange: this.handleSwitch('archived'),\n          value: \"archived\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }),\n        label: \"Archive this ticket?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-textarea\",\n        value: this.state.applicationNotes,\n        onChange: this.handleChange('applicationNotes'),\n        label: \"Notes\",\n        placeholder: \"Other Important Details\",\n        multiline: true,\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.calledForInterview,\n          onChange: this.handleSwitch('calledForInterview'),\n          value: \"calledForInterview\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }),\n        label: \"Have They Requested an Interview?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.jobOffered,\n          onChange: this.handleSwitch('jobOffered'),\n          value: \"jobOffered\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }),\n        label: \"Have I Been Offered the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })) : null, this.state.jobOffered && this.state.calledForInterview ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.acceptedOffer,\n          onChange: this.handleSwitch('acceptedOffer'),\n          value: \"acceptedOffer\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }),\n        label: \"Have I Accepted the Position?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })) : null, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.props.toggleEditDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        label: \"submit\",\n        type: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Save\"))))));\n    }\n  }]);\n\n  return EditTicket;\n}(Component);\n\nexport default EditTicket;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/TicketDialog/EditTicket.js"],"names":["React","Component","axios","Button","Grid","Switch","DialogActions","TextField","FormControlLabel","EditTicket","props","handleChange","prop","event","setState","target","value","handleSwitch","name","checked","updateTicket","preventDefault","method","url","state","ticketId","data","companyName","position","resumeLink","includesCoverLetter","applicationNotes","calledForInterview","jobOffered","acceptedOffer","archived","headers","localStorage","getItem","then","response","retrieveTickets","getUpdatedTicketDetails","toggleEditDisplay","catch","error","console","log","ticket","ticket_id","company","resume_link","includes_cover_letter","application_notes","called_for_interview","job_offered","accepted_offer","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\n\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\n\nimport DialogActions from '@material-ui/core/DialogActions';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nclass EditTicket extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            ticketId: this.props.ticket.ticket_id,\n            companyName: this.props.ticket.company,\n            position: this.props.ticket.position,\n            resumeLink: this.props.ticket.resume_link,\n            includesCoverLetter: this.props.ticket.includes_cover_letter,\n            applicationNotes: this.props.ticket.application_notes,\n            calledForInterview: this.props.ticket.called_for_interview,\n            jobOffered: this.props.ticket.job_offered,\n            acceptedOffer: this.props.ticket.accepted_offer,\n            archived: this.props.ticket.archived,\n\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSwitch = this.handleSwitch.bind(this)\n        this.updateTicket = this.updateTicket.bind(this)\n    }\n\n    handleChange = prop => event => {\n        \n        this.setState({ [prop]: event.target.value });\n        \n    }\n\n    handleSwitch = name => event => {\n        this.setState({ [name]: event.target.checked });\n    }\n\n    updateTicket = (event) => {\n        event.preventDefault();\n\n        axios({\n            method: 'put',\n            url: `http://localhost:4242/updateticket/${this.state.ticketId}`,\n            data: {\n                ticketId: this.state.ticketId,\n                companyName: this.state.companyName,\n                position: this.state.position,\n                resumeLink: this.state.resumeLink,\n                includesCoverLetter: this.state.includesCoverLetter,\n                applicationNotes: this.state.applicationNotes,\n                calledForInterview: this.state.calledForInterview,\n                jobOffered: this.state.jobOffered,\n                acceptedOffer: this.state.acceptedOffer,\n                archived: this.state.archived\n            },\n            headers: {                \n                \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')                 \n            }\n            \n        })\n        .then(response => {\n            return this.props.retrieveTickets()\n            \n        })\n        .then(response => {\n            this.props.getUpdatedTicketDetails()\n            return this.props.toggleEditDisplay()\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <form onSubmit={this.updateTicket}>\n                    <Grid container spacing={24}>\n                        <Grid item xs={6}>\n                            <TextField\n                                required\n                                label=\"Company\"\n                                value={this.state.companyName}\n                                placeholder=\"The Company Name\"\n                                onChange={this.handleChange('companyName')}\n                                margin=\"normal\"\n                                variant=\"filled\"\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                required\n                                label=\"Position\"\n                                value={this.state.position}\n                                placeholder=\"The Job Title\"\n                                onChange={this.handleChange('position')}\n                                margin=\"normal\"\n                                variant=\"filled\"\n                            />                    \n                        </Grid>                   \n                        <Grid container spacing={0} >\n                            <Grid item xs={6}>\n                                <TextField\n                                    label=\"Resume\"\n                                    value={this.state.resumeLink}\n                                    placeholder=\"A Link to Your Resume\"\n                                    onChange={this.handleChange('resumeLink')}\n                                    variant=\"filled\"\n                                />     \n                            </Grid>\n                            <Grid item xs={3}>\n                                <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.includesCoverLetter}\n                                        onChange={this.handleSwitch('includesCoverLetter')}\n                                        value=\"includesCoverLetter\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"Includes a Cover Letter?\"\n                                    labelPlacement=\"start\"\n                                />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.archived}\n                                        onChange={this.handleSwitch('archived')}\n                                        value=\"archived\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"Archive this ticket?\"\n                                    labelPlacement=\"start\"\n                                />\n                            </Grid>  \n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"filled-textarea\"\n                                value={this.state.applicationNotes}\n                                onChange={this.handleChange('applicationNotes')}\n                                label=\"Notes\"\n                                placeholder=\"Other Important Details\"\n                                multiline\n                                variant=\"filled\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>                       \n                            <FormControlLabel\n                                control={\n                                <Switch\n                                    checked={this.state.calledForInterview}\n                                    onChange={this.handleSwitch('calledForInterview')}\n                                    value=\"calledForInterview\"\n                                    color=\"primary\"\n                                />\n                                }\n                                label=\"Have They Requested an Interview?\"\n                                labelPlacement=\"start\"\n                            />\n                        </Grid>\n                        {this.state.calledForInterview ?\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.jobOffered}\n                                        onChange={this.handleSwitch('jobOffered')}\n                                        value=\"jobOffered\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"Have I Been Offered the Position?\"\n                                    labelPlacement=\"start\"\n                                />\n                            </Grid>\n                        : null }         \n                        {this.state.jobOffered && this.state.calledForInterview ?\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.acceptedOffer}\n                                    onChange={this.handleSwitch('acceptedOffer')}\n                                    value=\"acceptedOffer\"\n                                    color=\"primary\"\n                                    />\n                                }\n                                label=\"Have I Accepted the Position?\"\n                                labelPlacement=\"start\"\n                                />\n                            </Grid>\n                        : null}\n                        <Grid item xs={12}>\n                            <DialogActions>\n                                <Button variant=\"contained\" onClick={this.props.toggleEditDisplay}>\n                                    Cancel\n                                </Button>\n                        \n                                <Button variant=\"contained\" color=\"primary\" label=\"submit\" type=\"Submit\">\n                                    Save \n                                </Button>\n                            </DialogActions>\n                        </Grid>\n                    </Grid>\n                               \n                </form>\n                \n                \n            </div>\n        )\n    }\n\n}\n\nexport default EditTicket"]},"metadata":{},"sourceType":"module"}