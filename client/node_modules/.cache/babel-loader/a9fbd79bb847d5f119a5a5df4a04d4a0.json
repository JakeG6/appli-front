{"ast":null,"code":"import _defineProperty from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserSettings/ChangePassword.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport LoadingSpinner from '../UserView/LoadingSpinner.js';\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Switch from '@material-ui/core/Switch';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nvar ChangePassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePassword, _Component);\n\n  function ChangePassword(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePassword).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.updatePassword = function (event) {\n      event.preventDefault();\n      var decoded = jwt_decode(localStorage.getItem('jwtToken'));\n\n      _this.setState({\n        loading: true\n      }, function () {\n        return axios({\n          method: 'put',\n          url: \"http://localhost:4242/updatepassword\",\n          data: {\n            oldPassword: _this.state.oldPassword,\n            newPassword: _this.state.newPassword,\n            username: decoded.name\n          },\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')\n          }\n        }).then(function (response) {\n          console.log(response);\n\n          _this.setState({\n            loading: false,\n            didUpdatePW: true\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this.setState({\n            loading: false,\n            incorrectPW: true\n          }, function () {\n            console.log(_this.state.loading);\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      oldPassword: '',\n      newPassword: '',\n      loading: false,\n      fading: true,\n      didUpdatePW: false,\n      incorrectPW: false\n    };\n    _this.updatePassword = _this.updatePassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ChangePassword, [{\n    key: \"render\",\n    value: function render() {\n      var decoded = jwt_decode(localStorage.getItem('jwtToken')); //get the current time\n\n      var currentTime = Math.floor(Date.now() / 1000); //if the current time on rendering is earlier than the expiration date, show the page.\n\n      if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.state.loading ? LoadingSpinner() : this.state.didUpdatePW ? React.createElement(Fade, {\n          in: this.state.didUpdatePW,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Your Password Has Been Updated\")) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, this.state.incorrectPW ? \"Error: Incorrect Password\" : \"Change Your Password\"), React.createElement(\"form\", {\n          onSubmit: this.updatePassword,\n          style: {\n            padding: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          margin: \"normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(InputLabel, {\n          htmlFor: \"component-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Current Password\"), React.createElement(Input, {\n          id: \"component-simple\",\n          autoComplete: \"off\",\n          value: this.state.oldPassword,\n          onChange: this.handleChange('oldPassword'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          margin: \"normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(InputLabel, {\n          htmlFor: \"component-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"New Password\"), React.createElement(Input, {\n          id: \"component-simple\",\n          autoComplete: \"off\",\n          value: this.state.newPassword,\n          onChange: this.handleChange('newPassword'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"Submit\",\n          color: \"secondary\",\n          variant: \"contained\",\n          label: \"create\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Submit\"))))));\n      } //otherwise, send the user to the login page.\n      else {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          });\n        }\n    }\n  }]);\n\n  return ChangePassword;\n}(Component);\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserSettings/ChangePassword.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Redirect","axios","jwt_decode","LoadingSpinner","Fade","FormControl","Grid","Input","InputLabel","AppBar","Button","Card","CardHeader","CardMedia","CardContent","CardActions","FormControlLabel","Menu","MenuItem","Switch","Tabs","Tab","Toolbar","ChangePassword","props","handleChange","name","event","setState","target","value","updatePassword","preventDefault","decoded","localStorage","getItem","loading","method","url","data","oldPassword","state","newPassword","username","headers","then","response","console","log","didUpdatePW","catch","error","incorrectPW","fading","bind","currentTime","Math","floor","Date","now","exp","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport LoadingSpinner from '../UserView/LoadingSpinner.js' \n\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Switch from '@material-ui/core/Switch';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nclass ChangePassword extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            oldPassword: '',\n            newPassword: '',\n            loading: false,\n            fading: true,\n            didUpdatePW: false,\n            incorrectPW: false\n        }\n        this.updatePassword = this.updatePassword.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n      };\n\n    updatePassword = event => {\n        event.preventDefault();\n        let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n\n        this.setState({loading: true}, () => {\n            return axios({\n                method: 'put',\n                url: `http://localhost:4242/updatepassword`,\n                data: {\n                    oldPassword: this.state.oldPassword,\n                    newPassword: this.state.newPassword,\n                    username: decoded.name\n                },\n                headers: {                \n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')                 \n                }  \n                })\n                .then(response => {                          \n                    console.log(response)\n                    this.setState({loading: false, didUpdatePW: true})      \n                 })\n                .catch((error) => {\n                    console.log(error);\n                    this.setState({loading: false, incorrectPW: true}, () => {\n                        console.log(this.state.loading)\n                    })\n\n                }\n            );\n        }) \n    }\n\n    render() {\n\n        let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n        //get the current time\n        let currentTime = Math.floor(Date.now() / 1000)\n\n        //if the current time on rendering is earlier than the expiration date, show the page.\n        if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n            return(\n            <div>\n            {\n                this.state.loading ? \n                LoadingSpinner()\n                :\n                this.state.didUpdatePW ?\n                <Fade in={this.state.didUpdatePW}>\n                    <h1>Your Password Has Been Updated</h1>\n                </Fade>\n                :\n                <div>\n                <h1>{this.state.incorrectPW ? \"Error: Incorrect Password\" : \"Change Your Password\"}</h1>\n                <form onSubmit={this.updatePassword} style={{ padding: 8 }}>                    \n                    <Grid container spacing={16}>\n                        <Grid item xs={6}>\n                            <FormControl margin=\"normal\">\n                                <InputLabel htmlFor=\"component-simple\">Current Password</InputLabel>\n                                <Input id=\"component-simple\" autoComplete='off' \n                                value={this.state.oldPassword}  \n                                onChange={this.handleChange('oldPassword')} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControl margin=\"normal\">\n                                <InputLabel htmlFor=\"component-simple\">New Password</InputLabel>\n                                <Input id=\"component-simple\" autoComplete='off' \n                                value={this.state.newPassword}  \n                                onChange={this.handleChange('newPassword')} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button type=\"Submit\" color=\"secondary\" variant=\"contained\" label=\"create\">Submit</Button> \n                        </Grid>\n                    </Grid>                                                   \n                </form>\n                </div>\n            }\n            </div>\n        )} //otherwise, send the user to the login page.\n        else { \n          return (<Redirect to=\"/\" />) \n        } \n    }\n}\n\nexport default ChangePassword"]},"metadata":{},"sourceType":"module"}