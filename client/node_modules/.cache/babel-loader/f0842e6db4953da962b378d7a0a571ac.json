{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/UserView.js\";\nimport React, { Component } from 'react';\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport jwt_decode from 'jwt-decode';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\nvar UserView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserView, _Component);\n\n  function UserView(props) {\n    var _this;\n\n    _classCallCheck(this, UserView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserView).call(this, props));\n    _this.state = {\n      open: false,\n      currentUserId: ''\n    };\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserView, [{\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('jwtToken')) {\n        var decoded = jwt_decode(localStorage.getItem('jwtToken'));\n        console.log(decoded);\n        this.setState({\n          currentUserId: decoded.name\n        });\n        axios.get('/retrievetickets', {\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken')\n          }\n        }).then(function (user) {\n          console.log('data coming', user); //this.setState\n          //dispatch(getUsersData(data));\n        }).catch(function (error) {\n          console.log('error ', error);\n\n          _this2.props.history.push('/');\n        });\n      } else {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var primary = lightGreen.A400; //decode the jwt's payload.\n\n      var decoded = jwt_decode(localStorage.getItem('jwtToken')); //get the current time\n\n      var currentTime = Math.floor(Date.now() / 1000); //if the current time on rendering is earlier than the expiration date, show the page.\n\n      if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(AppBar, {\n          position: \"static\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Toolbar, {\n          color: primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"white-text\",\n          onClick: this.props.handleLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"LOG OUT\")), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Hello \", this.state.currentUserId))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"This is where your tickets will go.\"), React.createElement(Dialog, {\n          open: this.state.open,\n          onClose: this.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(NewTrackerDialog, {\n          currentUserId: 'yes',\n          cancel: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })), React.createElement(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"Add\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })));\n      } //otherwise, send the user to the login page.\n      else {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        }\n    }\n  }]);\n\n  return UserView;\n}(Component);\n\nexport default UserView;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/UserView.js"],"names":["React","Component","NewTrackerDialog","BrowserRouter","Router","Route","Link","Redirect","lightGreen","jwt_decode","AppBar","Toolbar","TextField","Dialog","Button","Fab","AddIcon","axios","UserView","props","state","open","currentUserId","handleClickOpen","bind","handleClose","setState","localStorage","getItem","decoded","console","log","name","get","headers","then","user","catch","error","history","push","primary","A400","currentTime","Math","floor","Date","now","exp","handleLogout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport jwt_decode from 'jwt-decode';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\n\n\nclass UserView extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      currentUserId: ''\n    }\n\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    \n  }\n\n  handleClickOpen() {\n    this.setState({open: true})\n  }\n\n  handleClose() {\n    this.setState({open: false})\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('jwtToken')) {\n      let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n      console.log(decoded)\n      this.setState({currentUserId: decoded.name})\n      axios.get('/retrievetickets', {headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('jwtToken') }}).then((user)=>{\n        console.log('data coming', user);\n        //this.setState\n        //dispatch(getUsersData(data));\n      }).catch((error)=>{\n        console.log('error ', error);\n        this.props.history.push('/')\n      });\n    }\n    else {\n      this.props.history.push('/')\n    }\n    \n  }\n\n\n  render() {\n    const primary = lightGreen.A400;\n    \n    //decode the jwt's payload.\n    let decoded = jwt_decode(localStorage.getItem('jwtToken'))\n    //get the current time\n    let currentTime = Math.floor(Date.now() / 1000)\n    //if the current time on rendering is earlier than the expiration date, show the page.\n    if (currentTime < decoded.exp || localStorage.getItem('jwtToken') === false) { \n      return (\n        <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar  color={primary}>\n            <Button className=\"white-text\" onClick={this.props.handleLogout}><Link to=\"/\">LOG OUT</Link></Button>\n            <p>Hello {this.state.currentUserId}</p>\n          </Toolbar>\n        </AppBar>         \n        <p>This is where your tickets will go.</p>\n        <Dialog open={this.state.open} onClose={this.handleClose}  aria-labelledby=\"form-dialog-title\">\n          <NewTrackerDialog currentUserId={'yes'} cancel={this.handleClose} />\n        </Dialog>\n        <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleClickOpen}>\n          <AddIcon />\n        </Fab>\n       </div>\n      );\n    }\n    //otherwise, send the user to the login page.\n    else { \n      return (<Redirect to=\"/\" />) \n    }\n\n  }\n}\n\nexport default UserView;"]},"metadata":{},"sourceType":"module"}