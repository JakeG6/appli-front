{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/dev/appli/appli-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/dev/appli/appli-front/src/UserView/UserView.js\";\nimport React, { Component } from 'react';\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nvar UserView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserView, _Component);\n\n  function UserView(props) {\n    var _this;\n\n    _classCallCheck(this, UserView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserView).call(this, props));\n    _this.state = {\n      open: false\n    };\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserView, [{\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //\n      console.log(this.state.currentUser);\n    } // rememberAuthorization() {\n    //   // if the key exists in localStorage\n    //   if (localStorage.hasOwnProperty(\"authorized\")) {\n    //     // get the key's value from localStorage\n    //     let value = localStorage.getItem(\"authorized\");\n    //     // parse the localStorage string and setState\n    //     try {\n    //       value = JSON.parse(value);\n    //       this.setState({ authorized: value });\n    //     } catch (e) {\n    //       // handle empty string\n    //       this.setState({ authorized: value });\n    //     }\n    //   }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var primary = lightGreen.A400;\n\n      if (loggedIn === \"true\") {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(AppBar, {\n          position: \"static\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Toolbar, {\n          color: primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"white-text\",\n          onClick: this.props.handleLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"LOG OUT\")), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Hello \", currentUser, \". You are logged into the user view.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Your user id is \", currentUserId, \".\"))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"This is where your tickets will go.\"), React.createElement(Dialog, {\n          open: this.state.open,\n          onClose: this.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(NewTrackerDialog, {\n          currentUserId: currentUserId,\n          cancel: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })), React.createElement(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"Add\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return UserView;\n}(Component);\n\nexport default UserView;","map":{"version":3,"sources":["/Users/jake/dev/appli/appli-front/src/UserView/UserView.js"],"names":["React","Component","NewTrackerDialog","BrowserRouter","Router","Route","Link","Redirect","lightGreen","AppBar","Toolbar","TextField","Dialog","Button","Fab","AddIcon","UserView","props","state","open","handleClickOpen","bind","handleClose","setState","console","log","currentUser","primary","A400","loggedIn","handleLogout","currentUserId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NewTrackerDialog from './NewTrackerDialog.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport lightGreen from '@material-ui/core/colors/lightGreen';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\nclass UserView extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n    }\n\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  handleClickOpen() {\n    this.setState({open: true})\n  }\n\n  handleClose() {\n    this.setState({open: false})\n  }\n\n  componentDidMount() {\n    //\n    console.log(this.state.currentUser)\n  }\n\n  // rememberAuthorization() {\n    \n  //   // if the key exists in localStorage\n  //   if (localStorage.hasOwnProperty(\"authorized\")) {\n  //     // get the key's value from localStorage\n  //     let value = localStorage.getItem(\"authorized\");\n\n  //     // parse the localStorage string and setState\n  //     try {\n  //       value = JSON.parse(value);\n  //       this.setState({ authorized: value });\n  //     } catch (e) {\n  //       // handle empty string\n  //       this.setState({ authorized: value });\n  //     }\n  //   }\n  \n  // }\n\n\n  render() {\n    const primary = lightGreen.A400;\n    \n   \n    \n    if (loggedIn === \"true\") {\n      return (\n        <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar  color={primary}>\n          <Button className=\"white-text\" onClick={this.props.handleLogout}><Link to=\"/\">LOG OUT</Link></Button>\n          <p>Hello {currentUser}. You are logged into the user view.</p>\n          <p>Your user id is {currentUserId}.</p>\n          </Toolbar>\n        </AppBar>         \n        <p>This is where your tickets will go.</p>\n        <Dialog open={this.state.open} onClose={this.handleClose}  aria-labelledby=\"form-dialog-title\">\n          <NewTrackerDialog currentUserId={currentUserId} cancel={this.handleClose} />\n        </Dialog>\n        <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleClickOpen}>\n          <AddIcon />\n        </Fab>\n       </div>\n      );\n    }\n\n    else { \n      return (<Redirect to=\"/\" />) }\n\n  }\n}\n\nexport default UserView;"]},"metadata":{},"sourceType":"module"}